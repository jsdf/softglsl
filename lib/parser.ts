/* eslint-disable */



const peggyParser: {parse: any, SyntaxError: any, DefaultTracer?: any} = // Generated by Peggy 3.0.2.
//
// https://peggyjs.org/
// @ts-ignore
(function() {
// @ts-ignore
  "use strict";

// @ts-ignore
function peg$subclass(child, parent) {
// @ts-ignore
  function C() { this.constructor = child; }
// @ts-ignore
  C.prototype = parent.prototype;
// @ts-ignore
  child.prototype = new C();
}

// @ts-ignore
function peg$SyntaxError(message, expected, found, location) {
// @ts-ignore
  var self = Error.call(this, message);
  // istanbul ignore next Check is a necessary evil to support older environments
// @ts-ignore
  if (Object.setPrototypeOf) {
// @ts-ignore
    Object.setPrototypeOf(self, peg$SyntaxError.prototype);
  }
// @ts-ignore
  self.expected = expected;
// @ts-ignore
  self.found = found;
// @ts-ignore
  self.location = location;
// @ts-ignore
  self.name = "SyntaxError";
// @ts-ignore
  return self;
}

// @ts-ignore
peg$subclass(peg$SyntaxError, Error);

// @ts-ignore
function peg$padEnd(str, targetLength, padString) {
// @ts-ignore
  padString = padString || " ";
// @ts-ignore
  if (str.length > targetLength) { return str; }
// @ts-ignore
  targetLength -= str.length;
// @ts-ignore
  padString += padString.repeat(targetLength);
// @ts-ignore
  return str + padString.slice(0, targetLength);
}

// @ts-ignore
peg$SyntaxError.prototype.format = function(sources) {
// @ts-ignore
  var str = "Error: " + this.message;
// @ts-ignore
  if (this.location) {
// @ts-ignore
    var src = null;
// @ts-ignore
    var k;
// @ts-ignore
    for (k = 0; k < sources.length; k++) {
// @ts-ignore
      if (sources[k].source === this.location.source) {
// @ts-ignore
        src = sources[k].text.split(/\r\n|\n|\r/g);
// @ts-ignore
        break;
      }
    }
// @ts-ignore
    var s = this.location.start;
// @ts-ignore
    var offset_s = (this.location.source && (typeof this.location.source.offset === "function"))
// @ts-ignore
      ? this.location.source.offset(s)
// @ts-ignore
      : s;
// @ts-ignore
    var loc = this.location.source + ":" + offset_s.line + ":" + offset_s.column;
// @ts-ignore
    if (src) {
// @ts-ignore
      var e = this.location.end;
// @ts-ignore
      var filler = peg$padEnd("", offset_s.line.toString().length, ' ');
// @ts-ignore
      var line = src[s.line - 1];
// @ts-ignore
      var last = s.line === e.line ? e.column : line.length + 1;
// @ts-ignore
      var hatLen = (last - s.column) || 1;
// @ts-ignore
      str += "\n --> " + loc + "\n"
// @ts-ignore
          + filler + " |\n"
// @ts-ignore
          + offset_s.line + " | " + line + "\n"
// @ts-ignore
          + filler + " | " + peg$padEnd("", s.column - 1, ' ')
// @ts-ignore
          + peg$padEnd("", hatLen, "^");
// @ts-ignore
    } else {
// @ts-ignore
      str += "\n at " + loc;
    }
  }
// @ts-ignore
  return str;
};

// @ts-ignore
peg$SyntaxError.buildMessage = function(expected, found) {
// @ts-ignore
  var DESCRIBE_EXPECTATION_FNS = {
// @ts-ignore
    literal: function(expectation) {
// @ts-ignore
      return "\"" + literalEscape(expectation.text) + "\"";
    },

// @ts-ignore
    class: function(expectation) {
// @ts-ignore
      var escapedParts = expectation.parts.map(function(part) {
// @ts-ignore
        return Array.isArray(part)
// @ts-ignore
          ? classEscape(part[0]) + "-" + classEscape(part[1])
// @ts-ignore
          : classEscape(part);
      });

// @ts-ignore
      return "[" + (expectation.inverted ? "^" : "") + escapedParts.join("") + "]";
    },

// @ts-ignore
    any: function() {
// @ts-ignore
      return "any character";
    },

// @ts-ignore
    end: function() {
// @ts-ignore
      return "end of input";
    },

// @ts-ignore
    other: function(expectation) {
// @ts-ignore
      return expectation.description;
    }
  };

// @ts-ignore
  function hex(ch) {
// @ts-ignore
    return ch.charCodeAt(0).toString(16).toUpperCase();
  }

// @ts-ignore
  function literalEscape(s) {
// @ts-ignore
    return s
// @ts-ignore
      .replace(/\\/g, "\\\\")
// @ts-ignore
      .replace(/"/g,  "\\\"")
// @ts-ignore
      .replace(/\0/g, "\\0")
// @ts-ignore
      .replace(/\t/g, "\\t")
// @ts-ignore
      .replace(/\n/g, "\\n")
// @ts-ignore
      .replace(/\r/g, "\\r")
// @ts-ignore
      .replace(/[\x00-\x0F]/g,          function(ch) { return "\\x0" + hex(ch); })
// @ts-ignore
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return "\\x"  + hex(ch); });
  }

// @ts-ignore
  function classEscape(s) {
// @ts-ignore
    return s
// @ts-ignore
      .replace(/\\/g, "\\\\")
// @ts-ignore
      .replace(/\]/g, "\\]")
// @ts-ignore
      .replace(/\^/g, "\\^")
// @ts-ignore
      .replace(/-/g,  "\\-")
// @ts-ignore
      .replace(/\0/g, "\\0")
// @ts-ignore
      .replace(/\t/g, "\\t")
// @ts-ignore
      .replace(/\n/g, "\\n")
// @ts-ignore
      .replace(/\r/g, "\\r")
// @ts-ignore
      .replace(/[\x00-\x0F]/g,          function(ch) { return "\\x0" + hex(ch); })
// @ts-ignore
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return "\\x"  + hex(ch); });
  }

// @ts-ignore
  function describeExpectation(expectation) {
// @ts-ignore
    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
  }

// @ts-ignore
  function describeExpected(expected) {
// @ts-ignore
    var descriptions = expected.map(describeExpectation);
// @ts-ignore
    var i, j;

// @ts-ignore
    descriptions.sort();

// @ts-ignore
    if (descriptions.length > 0) {
// @ts-ignore
      for (i = 1, j = 1; i < descriptions.length; i++) {
// @ts-ignore
        if (descriptions[i - 1] !== descriptions[i]) {
// @ts-ignore
          descriptions[j] = descriptions[i];
// @ts-ignore
          j++;
        }
      }
// @ts-ignore
      descriptions.length = j;
    }

// @ts-ignore
    switch (descriptions.length) {
// @ts-ignore
      case 1:
// @ts-ignore
        return descriptions[0];

// @ts-ignore
      case 2:
// @ts-ignore
        return descriptions[0] + " or " + descriptions[1];

// @ts-ignore
      default:
// @ts-ignore
        return descriptions.slice(0, -1).join(", ")
// @ts-ignore
          + ", or "
// @ts-ignore
          + descriptions[descriptions.length - 1];
    }
  }

// @ts-ignore
  function describeFound(found) {
// @ts-ignore
    return found ? "\"" + literalEscape(found) + "\"" : "end of input";
  }

// @ts-ignore
  return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
};

// @ts-ignore
function peg$parse(input, options) {
// @ts-ignore
  options = options !== undefined ? options : {};

// @ts-ignore
  var peg$FAILED = {};
// @ts-ignore
  var peg$source = options.grammarSource;

// @ts-ignore
  var peg$startRuleFunctions = { start: peg$parsestart };
// @ts-ignore
  var peg$startRuleFunction = peg$parsestart;

// @ts-ignore
  var peg$c0 = ".";
  var peg$c1 = "true";
  var peg$c2 = "false";
  var peg$c3 = "<<";
  var peg$c4 = ">>";
  var peg$c5 = "++";
  var peg$c6 = "--";
  var peg$c7 = "<=";
  var peg$c8 = ">=";
  var peg$c9 = "==";
  var peg$c10 = "!=";
  var peg$c11 = "&&";
  var peg$c12 = "||";
  var peg$c13 = "^^";
  var peg$c14 = "*=";
  var peg$c15 = "/=";
  var peg$c16 = "+=";
  var peg$c17 = "%=";
  var peg$c18 = "<<=";
  var peg$c19 = ">>=";
  var peg$c20 = "&=";
  var peg$c21 = "^=";
  var peg$c22 = "|=";
  var peg$c23 = "-=";
  var peg$c24 = "=";
  var peg$c25 = "(";
  var peg$c26 = ")";
  var peg$c27 = "[";
  var peg$c28 = "]";
  var peg$c29 = "{";
  var peg$c30 = "}";
  var peg$c31 = ",";
  var peg$c32 = ":";
  var peg$c33 = ";";
  var peg$c34 = "!";
  var peg$c35 = "-";
  var peg$c36 = "~";
  var peg$c37 = "+";
  var peg$c38 = "*";
  var peg$c39 = "/";
  var peg$c40 = "%";
  var peg$c41 = "<";
  var peg$c42 = ">";
  var peg$c43 = "|";
  var peg$c44 = "^";
  var peg$c45 = "&";
  var peg$c46 = "?";
  var peg$c47 = "//";
  var peg$c48 = "\n";
  var peg$c49 = "/*";
  var peg$c50 = "*/";
  var peg$c51 = "const";
  var peg$c52 = "bool";
  var peg$c53 = "float";
  var peg$c54 = "int";
  var peg$c55 = "uint";
  var peg$c56 = "break";
  var peg$c57 = "continue";
  var peg$c58 = "do";
  var peg$c59 = "else";
  var peg$c60 = "for";
  var peg$c61 = "if";
  var peg$c62 = "discard";
  var peg$c63 = "return";
  var peg$c64 = "switch";
  var peg$c65 = "case";
  var peg$c66 = "default";
  var peg$c67 = "bvec2";
  var peg$c68 = "bvec3";
  var peg$c69 = "bvec4";
  var peg$c70 = "ivec2";
  var peg$c71 = "ivec3";
  var peg$c72 = "ivec4";
  var peg$c73 = "uvec2";
  var peg$c74 = "uvec3";
  var peg$c75 = "uvec4";
  var peg$c76 = "vec2";
  var peg$c77 = "vec3";
  var peg$c78 = "vec4";
  var peg$c79 = "mat2";
  var peg$c80 = "mat3";
  var peg$c81 = "mat4";
  var peg$c82 = "centroid";
  var peg$c83 = "in";
  var peg$c84 = "out";
  var peg$c85 = "inout";
  var peg$c86 = "uniform";
  var peg$c87 = "flat";
  var peg$c88 = "smooth";
  var peg$c89 = "layout";
  var peg$c90 = "mat2x2";
  var peg$c91 = "mat2x3";
  var peg$c92 = "mat2x4";
  var peg$c93 = "mat3x2";
  var peg$c94 = "mat3x3";
  var peg$c95 = "mat3x4";
  var peg$c96 = "mat4x2";
  var peg$c97 = "mat4x3";
  var peg$c98 = "mat4x4";
  var peg$c99 = "sampler2D";
  var peg$c100 = "sampler3D";
  var peg$c101 = "samplerCube";
  var peg$c102 = "sampler2DShadow";
  var peg$c103 = "samplerCubeShadow";
  var peg$c104 = "sampler2DArray";
  var peg$c105 = "sampler2DArrayShadow";
  var peg$c106 = "isampler2D";
  var peg$c107 = "isampler3D";
  var peg$c108 = "isamplerCube";
  var peg$c109 = "isampler2DArray";
  var peg$c110 = "usampler2D";
  var peg$c111 = "usampler3D";
  var peg$c112 = "usamplerCube";
  var peg$c113 = "usampler2DArray";
  var peg$c114 = "struct";
  var peg$c115 = "void";
  var peg$c116 = "while";
  var peg$c117 = "invariant";
  var peg$c118 = "highp";
  var peg$c119 = "mediump";
  var peg$c120 = "lowp";
  var peg$c121 = "precision";

  var peg$r0 = /^[a-zA-Z_]/;
  var peg$r1 = /^[a-zA-Z0-9_]/;
  var peg$r2 = /^[0-9]/;
  var peg$r3 = /^[uU]/;
  var peg$r4 = /^[eE]/;
  var peg$r5 = /^[+\-]/;
  var peg$r6 = /^[ \t\n\r]/;
  var peg$r7 = /^[^\n]/;

  var peg$e0 = peg$classExpectation([["a", "z"], ["A", "Z"], "_"], false, false);
  var peg$e1 = peg$classExpectation([["a", "z"], ["A", "Z"], ["0", "9"], "_"], false, false);
  var peg$e2 = peg$classExpectation([["0", "9"]], false, false);
  var peg$e3 = peg$classExpectation(["u", "U"], false, false);
  var peg$e4 = peg$literalExpectation(".", false);
  var peg$e5 = peg$classExpectation(["e", "E"], false, false);
  var peg$e6 = peg$classExpectation(["+", "-"], false, false);
  var peg$e7 = peg$literalExpectation("true", false);
  var peg$e8 = peg$literalExpectation("false", false);
  var peg$e9 = peg$literalExpectation("<<", false);
  var peg$e10 = peg$literalExpectation(">>", false);
  var peg$e11 = peg$literalExpectation("++", false);
  var peg$e12 = peg$literalExpectation("--", false);
  var peg$e13 = peg$literalExpectation("<=", false);
  var peg$e14 = peg$literalExpectation(">=", false);
  var peg$e15 = peg$literalExpectation("==", false);
  var peg$e16 = peg$literalExpectation("!=", false);
  var peg$e17 = peg$literalExpectation("&&", false);
  var peg$e18 = peg$literalExpectation("||", false);
  var peg$e19 = peg$literalExpectation("^^", false);
  var peg$e20 = peg$literalExpectation("*=", false);
  var peg$e21 = peg$literalExpectation("/=", false);
  var peg$e22 = peg$literalExpectation("+=", false);
  var peg$e23 = peg$literalExpectation("%=", false);
  var peg$e24 = peg$literalExpectation("<<=", false);
  var peg$e25 = peg$literalExpectation(">>=", false);
  var peg$e26 = peg$literalExpectation("&=", false);
  var peg$e27 = peg$literalExpectation("^=", false);
  var peg$e28 = peg$literalExpectation("|=", false);
  var peg$e29 = peg$literalExpectation("-=", false);
  var peg$e30 = peg$literalExpectation("=", false);
  var peg$e31 = peg$literalExpectation("(", false);
  var peg$e32 = peg$literalExpectation(")", false);
  var peg$e33 = peg$literalExpectation("[", false);
  var peg$e34 = peg$literalExpectation("]", false);
  var peg$e35 = peg$literalExpectation("{", false);
  var peg$e36 = peg$literalExpectation("}", false);
  var peg$e37 = peg$literalExpectation(",", false);
  var peg$e38 = peg$literalExpectation(":", false);
  var peg$e39 = peg$literalExpectation(";", false);
  var peg$e40 = peg$literalExpectation("!", false);
  var peg$e41 = peg$literalExpectation("-", false);
  var peg$e42 = peg$literalExpectation("~", false);
  var peg$e43 = peg$literalExpectation("+", false);
  var peg$e44 = peg$literalExpectation("*", false);
  var peg$e45 = peg$literalExpectation("/", false);
  var peg$e46 = peg$literalExpectation("%", false);
  var peg$e47 = peg$literalExpectation("<", false);
  var peg$e48 = peg$literalExpectation(">", false);
  var peg$e49 = peg$literalExpectation("|", false);
  var peg$e50 = peg$literalExpectation("^", false);
  var peg$e51 = peg$literalExpectation("&", false);
  var peg$e52 = peg$literalExpectation("?", false);
  var peg$e53 = peg$otherExpectation("whitespace");
  var peg$e54 = peg$classExpectation([" ", "\t", "\n", "\r"], false, false);
  var peg$e55 = peg$literalExpectation("//", false);
  var peg$e56 = peg$classExpectation(["\n"], true, false);
  var peg$e57 = peg$literalExpectation("\n", false);
  var peg$e58 = peg$literalExpectation("/*", false);
  var peg$e59 = peg$literalExpectation("*/", false);
  var peg$e60 = peg$anyExpectation();
  var peg$e61 = peg$literalExpectation("const", false);
  var peg$e62 = peg$literalExpectation("bool", false);
  var peg$e63 = peg$literalExpectation("float", false);
  var peg$e64 = peg$literalExpectation("int", false);
  var peg$e65 = peg$literalExpectation("uint", false);
  var peg$e66 = peg$literalExpectation("break", false);
  var peg$e67 = peg$literalExpectation("continue", false);
  var peg$e68 = peg$literalExpectation("do", false);
  var peg$e69 = peg$literalExpectation("else", false);
  var peg$e70 = peg$literalExpectation("for", false);
  var peg$e71 = peg$literalExpectation("if", false);
  var peg$e72 = peg$literalExpectation("discard", false);
  var peg$e73 = peg$literalExpectation("return", false);
  var peg$e74 = peg$literalExpectation("switch", false);
  var peg$e75 = peg$literalExpectation("case", false);
  var peg$e76 = peg$literalExpectation("default", false);
  var peg$e77 = peg$literalExpectation("bvec2", false);
  var peg$e78 = peg$literalExpectation("bvec3", false);
  var peg$e79 = peg$literalExpectation("bvec4", false);
  var peg$e80 = peg$literalExpectation("ivec2", false);
  var peg$e81 = peg$literalExpectation("ivec3", false);
  var peg$e82 = peg$literalExpectation("ivec4", false);
  var peg$e83 = peg$literalExpectation("uvec2", false);
  var peg$e84 = peg$literalExpectation("uvec3", false);
  var peg$e85 = peg$literalExpectation("uvec4", false);
  var peg$e86 = peg$literalExpectation("vec2", false);
  var peg$e87 = peg$literalExpectation("vec3", false);
  var peg$e88 = peg$literalExpectation("vec4", false);
  var peg$e89 = peg$literalExpectation("mat2", false);
  var peg$e90 = peg$literalExpectation("mat3", false);
  var peg$e91 = peg$literalExpectation("mat4", false);
  var peg$e92 = peg$literalExpectation("centroid", false);
  var peg$e93 = peg$literalExpectation("in", false);
  var peg$e94 = peg$literalExpectation("out", false);
  var peg$e95 = peg$literalExpectation("inout", false);
  var peg$e96 = peg$literalExpectation("uniform", false);
  var peg$e97 = peg$literalExpectation("flat", false);
  var peg$e98 = peg$literalExpectation("smooth", false);
  var peg$e99 = peg$literalExpectation("layout", false);
  var peg$e100 = peg$literalExpectation("mat2x2", false);
  var peg$e101 = peg$literalExpectation("mat2x3", false);
  var peg$e102 = peg$literalExpectation("mat2x4", false);
  var peg$e103 = peg$literalExpectation("mat3x2", false);
  var peg$e104 = peg$literalExpectation("mat3x3", false);
  var peg$e105 = peg$literalExpectation("mat3x4", false);
  var peg$e106 = peg$literalExpectation("mat4x2", false);
  var peg$e107 = peg$literalExpectation("mat4x3", false);
  var peg$e108 = peg$literalExpectation("mat4x4", false);
  var peg$e109 = peg$literalExpectation("sampler2D", false);
  var peg$e110 = peg$literalExpectation("sampler3D", false);
  var peg$e111 = peg$literalExpectation("samplerCube", false);
  var peg$e112 = peg$literalExpectation("sampler2DShadow", false);
  var peg$e113 = peg$literalExpectation("samplerCubeShadow", false);
  var peg$e114 = peg$literalExpectation("sampler2DArray", false);
  var peg$e115 = peg$literalExpectation("sampler2DArrayShadow", false);
  var peg$e116 = peg$literalExpectation("isampler2D", false);
  var peg$e117 = peg$literalExpectation("isampler3D", false);
  var peg$e118 = peg$literalExpectation("isamplerCube", false);
  var peg$e119 = peg$literalExpectation("isampler2DArray", false);
  var peg$e120 = peg$literalExpectation("usampler2D", false);
  var peg$e121 = peg$literalExpectation("usampler3D", false);
  var peg$e122 = peg$literalExpectation("usamplerCube", false);
  var peg$e123 = peg$literalExpectation("usampler2DArray", false);
  var peg$e124 = peg$literalExpectation("struct", false);
  var peg$e125 = peg$literalExpectation("void", false);
  var peg$e126 = peg$literalExpectation("while", false);
  var peg$e127 = peg$literalExpectation("invariant", false);
  var peg$e128 = peg$literalExpectation("highp", false);
  var peg$e129 = peg$literalExpectation("mediump", false);
  var peg$e130 = peg$literalExpectation("lowp", false);
  var peg$e131 = peg$literalExpectation("precision", false);
// @ts-ignore

  var peg$f0 = function() {
// @ts-ignore
      return { type: "Program", body: [$2] };
    };// @ts-ignore

  var peg$f1 = function() {
// @ts-ignore
      if ($2.length) {
// @ts-ignore
        return {
// @ts-ignore
          type: "SequenceExpression",
// @ts-ignore
          expressions: [$1].concat($2.map(e => e[3]))
        };
// @ts-ignore
      } else {
// @ts-ignore
        return $1;
      }
    };// @ts-ignore

  var peg$f2 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "AssignmentExpression",
// @ts-ignore
        operator: $3,
// @ts-ignore
        left: $1,
// @ts-ignore
        right: $5
      };
    };// @ts-ignore

  var peg$f3 = function() {
// @ts-ignore
      if ($2) {
// @ts-ignore
        return {
// @ts-ignore
          type: "ConditionalExpression",
// @ts-ignore
          test: $1,
// @ts-ignore
          consequent: $5,
// @ts-ignore
          alternate: $9
        };
// @ts-ignore
      } else {
// @ts-ignore
        return $1;
      }
    };// @ts-ignore

  var peg$f4 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildLogicalExpression) : $1;
    };// @ts-ignore

  var peg$f5 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildLogicalExpression) : $1;
    };// @ts-ignore

  var peg$f6 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildLogicalExpression) : $1;
    };// @ts-ignore

  var peg$f7 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildBinaryExpression) : $1;
    };// @ts-ignore

  var peg$f8 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildBinaryExpression) : $1;
    };// @ts-ignore

  var peg$f9 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildBinaryExpression) : $1;
    };// @ts-ignore

  var peg$f10 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildBinaryExpression) : $1;
    };// @ts-ignore

  var peg$f11 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildBinaryExpression) : $1;
    };// @ts-ignore

  var peg$f12 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildBinaryExpression) : $1;
    };// @ts-ignore

  var peg$f13 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildBinaryExpression) : $1;
    };// @ts-ignore

  var peg$f14 = function() {
// @ts-ignore
      return $2.length ? reduceExpressions($1, $2, buildBinaryExpression) : $1;
    };// @ts-ignore

  var peg$f15 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "UnaryExpression",
// @ts-ignore
        operator: $1,
// @ts-ignore
        argument: $3,
// @ts-ignore
        prefix: true
      };
    };// @ts-ignore

  var peg$f16 = function() {
// @ts-ignore
      return $2.reduce((acc, curr) => {
// @ts-ignore
        if (curr.type === "UpdateExpression") {
// @ts-ignore
          return {
// @ts-ignore
            type: "UpdateExpression",
// @ts-ignore
            operator: curr.operator,
// @ts-ignore
            argument: acc,
// @ts-ignore
            prefix: false
          };
// @ts-ignore
        } else if (curr.type === "MemberExpression") {
// @ts-ignore
          return {
// @ts-ignore
            type: "MemberExpression",
// @ts-ignore
            object: acc,
// @ts-ignore
            property: curr.property,
// @ts-ignore
            computed: curr.computed
          };
// @ts-ignore
        } else if (curr.type === "CallExpression") {
// @ts-ignore
          return {
// @ts-ignore
            type: "CallExpression",
// @ts-ignore
            callee: acc,
// @ts-ignore
            arguments: curr.arguments
          };
        }
// @ts-ignore
        return acc;
      }, $1);
    };// @ts-ignore

  var peg$f17 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "MemberExpression",
// @ts-ignore
        property: $5,
// @ts-ignore
        computed: true
      };
    };// @ts-ignore

  var peg$f18 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "MemberExpression",
// @ts-ignore
        property: {
// @ts-ignore
          type: "Identifier",
// @ts-ignore
          name: $4
        },
// @ts-ignore
        computed: false
      };
    };// @ts-ignore

  var peg$f19 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "CallExpression",
// @ts-ignore
        arguments: $1
      };
    };// @ts-ignore

  var peg$f20 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "UpdateExpression",
// @ts-ignore
        operator: $2,
// @ts-ignore
        prefix: false
      };
    };// @ts-ignore

  var peg$f21 = function() {
// @ts-ignore
      return $4;
    };// @ts-ignore

  var peg$f22 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "Identifier",
// @ts-ignore
        name: $1
      };
    };// @ts-ignore

  var peg$f23 = function() {
// @ts-ignore
      return $4 || [];
    };// @ts-ignore

  var peg$f24 = function() {
// @ts-ignore
      return [$1].concat($2.map(e => e[3]));
    };// @ts-ignore

  var peg$f25 = function() {
// @ts-ignore
      return text();
    };// @ts-ignore

  var peg$f26 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "Literal",
// @ts-ignore
        value: parseInt(text(), 10),
// @ts-ignore
        raw: text()
      };
    };// @ts-ignore

  var peg$f27 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "Literal",
// @ts-ignore
        value: parseInt(text().slice(0, -1), 10),
// @ts-ignore
        raw: text()
      };
    };// @ts-ignore

  var peg$f28 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "Literal",
// @ts-ignore
        value: parseFloat(text()),
// @ts-ignore
        raw: text()
      };
    };// @ts-ignore

  var peg$f29 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "Literal",
// @ts-ignore
        value: parseFloat(text()),
// @ts-ignore
        raw: text()
      };
    };// @ts-ignore

  var peg$f30 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "Literal",
// @ts-ignore
        value: parseFloat(text()),
// @ts-ignore
        raw: text()
      };
    };// @ts-ignore

  var peg$f31 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "Literal",
// @ts-ignore
        value: true,
// @ts-ignore
        raw: text()
      };
    };// @ts-ignore

  var peg$f32 = function() {
// @ts-ignore
      return {
// @ts-ignore
        type: "Literal",
// @ts-ignore
        value: false,
// @ts-ignore
        raw: text()
      };
    };// @ts-ignore

  var peg$f33 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f34 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f35 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f36 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f37 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f38 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f39 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f40 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f41 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f42 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f43 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f44 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f45 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f46 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f47 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f48 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f49 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f50 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f51 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f52 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f53 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f54 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f55 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f56 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f57 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f58 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f59 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f60 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f61 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f62 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f63 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f64 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f65 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f66 = function() {// @ts-ignore
 return text(); };// @ts-ignore

  var peg$f67 = function() {// @ts-ignore
 return text(); };
// @ts-ignore
  var peg$currPos = 0;
// @ts-ignore
  var peg$savedPos = 0;
// @ts-ignore
  var peg$posDetailsCache = [{ line: 1, column: 1 }];
// @ts-ignore
  var peg$maxFailPos = 0;
// @ts-ignore
  var peg$maxFailExpected = [];
// @ts-ignore
  var peg$silentFails = 0;

// @ts-ignore
  var peg$result;

// @ts-ignore
  if ("startRule" in options) {
// @ts-ignore
    if (!(options.startRule in peg$startRuleFunctions)) {
// @ts-ignore
      throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
    }

// @ts-ignore
    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
  }

// @ts-ignore
  function text() {
// @ts-ignore
    return input.substring(peg$savedPos, peg$currPos);
  }

// @ts-ignore
  function offset() {
// @ts-ignore
    return peg$savedPos;
  }

// @ts-ignore
  function range() {
// @ts-ignore
    return {
// @ts-ignore
      source: peg$source,
// @ts-ignore
      start: peg$savedPos,
// @ts-ignore
      end: peg$currPos
    };
  }

// @ts-ignore
  function location() {
// @ts-ignore
    return peg$computeLocation(peg$savedPos, peg$currPos);
  }

// @ts-ignore
  function expected(description, location) {
// @ts-ignore
    location = location !== undefined
// @ts-ignore
      ? location
// @ts-ignore
      : peg$computeLocation(peg$savedPos, peg$currPos);

// @ts-ignore
    throw peg$buildStructuredError(
// @ts-ignore
      [peg$otherExpectation(description)],
// @ts-ignore
      input.substring(peg$savedPos, peg$currPos),
// @ts-ignore
      location
    );
  }

// @ts-ignore
  function error(message, location) {
// @ts-ignore
    location = location !== undefined
// @ts-ignore
      ? location
// @ts-ignore
      : peg$computeLocation(peg$savedPos, peg$currPos);

// @ts-ignore
    throw peg$buildSimpleError(message, location);
  }

// @ts-ignore
  function peg$literalExpectation(text, ignoreCase) {
// @ts-ignore
    return { type: "literal", text: text, ignoreCase: ignoreCase };
  }

// @ts-ignore
  function peg$classExpectation(parts, inverted, ignoreCase) {
// @ts-ignore
    return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
  }

// @ts-ignore
  function peg$anyExpectation() {
// @ts-ignore
    return { type: "any" };
  }

// @ts-ignore
  function peg$endExpectation() {
// @ts-ignore
    return { type: "end" };
  }

// @ts-ignore
  function peg$otherExpectation(description) {
// @ts-ignore
    return { type: "other", description: description };
  }

// @ts-ignore
  function peg$computePosDetails(pos) {
// @ts-ignore
    var details = peg$posDetailsCache[pos];
// @ts-ignore
    var p;

// @ts-ignore
    if (details) {
// @ts-ignore
      return details;
// @ts-ignore
    } else {
// @ts-ignore
      p = pos - 1;
// @ts-ignore
      while (!peg$posDetailsCache[p]) {
// @ts-ignore
        p--;
      }

// @ts-ignore
      details = peg$posDetailsCache[p];
// @ts-ignore
      details = {
// @ts-ignore
        line: details.line,
// @ts-ignore
        column: details.column
      };

// @ts-ignore
      while (p < pos) {
// @ts-ignore
        if (input.charCodeAt(p) === 10) {
// @ts-ignore
          details.line++;
// @ts-ignore
          details.column = 1;
// @ts-ignore
        } else {
// @ts-ignore
          details.column++;
        }

// @ts-ignore
        p++;
      }

// @ts-ignore
      peg$posDetailsCache[pos] = details;

// @ts-ignore
      return details;
    }
  }

// @ts-ignore
  function peg$computeLocation(startPos, endPos, offset) {
// @ts-ignore
    var startPosDetails = peg$computePosDetails(startPos);
// @ts-ignore
    var endPosDetails = peg$computePosDetails(endPos);

// @ts-ignore
    var res = {
// @ts-ignore
      source: peg$source,
// @ts-ignore
      start: {
// @ts-ignore
        offset: startPos,
// @ts-ignore
        line: startPosDetails.line,
// @ts-ignore
        column: startPosDetails.column
      },
// @ts-ignore
      end: {
// @ts-ignore
        offset: endPos,
// @ts-ignore
        line: endPosDetails.line,
// @ts-ignore
        column: endPosDetails.column
      }
    };
// @ts-ignore
    if (offset && peg$source && (typeof peg$source.offset === "function")) {
// @ts-ignore
      res.start = peg$source.offset(res.start);
// @ts-ignore
      res.end = peg$source.offset(res.end);
    }
// @ts-ignore
    return res;
  }

// @ts-ignore
  function peg$fail(expected) {
// @ts-ignore
    if (peg$currPos < peg$maxFailPos) { return; }

// @ts-ignore
    if (peg$currPos > peg$maxFailPos) {
// @ts-ignore
      peg$maxFailPos = peg$currPos;
// @ts-ignore
      peg$maxFailExpected = [];
    }

// @ts-ignore
    peg$maxFailExpected.push(expected);
  }

// @ts-ignore
  function peg$buildSimpleError(message, location) {
// @ts-ignore
    return new peg$SyntaxError(message, null, null, location);
  }

// @ts-ignore
  function peg$buildStructuredError(expected, found, location) {
// @ts-ignore
    return new peg$SyntaxError(
// @ts-ignore
      peg$SyntaxError.buildMessage(expected, found),
// @ts-ignore
      expected,
// @ts-ignore
      found,
// @ts-ignore
      location
    );
  }

// @ts-ignore
  function // @ts-ignore
peg$parsestart() {
// @ts-ignore
    var s0, s1, s2, s3, s4;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parse_();
// @ts-ignore
    s2 = peg$parseexpression();
// @ts-ignore
    if (s2 !== peg$FAILED) {
// @ts-ignore
      s3 = peg$parse_();
// @ts-ignore
      s4 = peg$parseEOF();
// @ts-ignore
      if (s4 !== peg$FAILED) {
// @ts-ignore
        peg$savedPos = s0;
// @ts-ignore
        s0 = peg$f0();
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseexpression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseassignment_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseCOMMA();
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseassignment_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseCOMMA();
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseassignment_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f1();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseassignment_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5;

// @ts-ignore
    s0 = peg$parseconditional_expression();
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$currPos;
// @ts-ignore
      s1 = peg$parseunary_expression();
// @ts-ignore
      if (s1 !== peg$FAILED) {
// @ts-ignore
        s2 = peg$parse_();
// @ts-ignore
        s3 = peg$parseassignment_operator();
// @ts-ignore
        if (s3 !== peg$FAILED) {
// @ts-ignore
          s4 = peg$parse_();
// @ts-ignore
          s5 = peg$parseassignment_expression();
// @ts-ignore
          if (s5 !== peg$FAILED) {
// @ts-ignore
            peg$savedPos = s0;
// @ts-ignore
            s0 = peg$f2();
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s0;
// @ts-ignore
            s0 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s0;
// @ts-ignore
          s0 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseconditional_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parselogical_or_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = peg$currPos;
// @ts-ignore
      s3 = peg$parse_();
// @ts-ignore
      s4 = peg$parseQUESTION();
// @ts-ignore
      if (s4 !== peg$FAILED) {
// @ts-ignore
        s5 = peg$parse_();
// @ts-ignore
        s6 = peg$parseexpression();
// @ts-ignore
        if (s6 !== peg$FAILED) {
// @ts-ignore
          s7 = peg$parse_();
// @ts-ignore
          s8 = peg$parseCOLON();
// @ts-ignore
          if (s8 !== peg$FAILED) {
// @ts-ignore
            s9 = peg$parse_();
// @ts-ignore
            s10 = peg$parseassignment_expression();
// @ts-ignore
            if (s10 !== peg$FAILED) {
// @ts-ignore
              s3 = [s3, s4, s5, s6, s7, s8, s9, s10];
// @ts-ignore
              s2 = s3;
// @ts-ignore
            } else {
// @ts-ignore
              peg$currPos = s2;
// @ts-ignore
              s2 = peg$FAILED;
            }
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s2;
// @ts-ignore
            s2 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s2;
// @ts-ignore
          s2 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s2;
// @ts-ignore
        s2 = peg$FAILED;
      }
// @ts-ignore
      if (s2 === peg$FAILED) {
// @ts-ignore
        s2 = null;
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f3();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parselogical_or_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parselogical_xor_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseOR_OP();
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parselogical_xor_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseOR_OP();
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parselogical_xor_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f4();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parselogical_xor_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parselogical_and_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseXOR_OP();
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parselogical_and_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseXOR_OP();
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parselogical_and_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f5();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parselogical_and_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseinclusive_or_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseAND_OP();
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseinclusive_or_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseAND_OP();
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseinclusive_or_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f6();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseinclusive_or_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseexclusive_or_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseVERTICAL_BAR();
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseexclusive_or_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseVERTICAL_BAR();
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseexclusive_or_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f7();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseexclusive_or_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseand_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseCARET();
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseand_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseCARET();
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseand_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f8();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseand_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseequality_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseAMPERSAND();
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseequality_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseAMPERSAND();
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseequality_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f9();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseequality_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parserelational_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseEQ_OP();
// @ts-ignore
      if (s5 === peg$FAILED) {
// @ts-ignore
        s5 = peg$parseNE_OP();
      }
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parserelational_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseEQ_OP();
// @ts-ignore
        if (s5 === peg$FAILED) {
// @ts-ignore
          s5 = peg$parseNE_OP();
        }
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parserelational_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f10();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parserelational_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseshift_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseLEFT_ANGLE();
// @ts-ignore
      if (s5 === peg$FAILED) {
// @ts-ignore
        s5 = peg$parseRIGHT_ANGLE();
// @ts-ignore
        if (s5 === peg$FAILED) {
// @ts-ignore
          s5 = peg$parseLE_OP();
// @ts-ignore
          if (s5 === peg$FAILED) {
// @ts-ignore
            s5 = peg$parseGE_OP();
          }
        }
      }
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseshift_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseLEFT_ANGLE();
// @ts-ignore
        if (s5 === peg$FAILED) {
// @ts-ignore
          s5 = peg$parseRIGHT_ANGLE();
// @ts-ignore
          if (s5 === peg$FAILED) {
// @ts-ignore
            s5 = peg$parseLE_OP();
// @ts-ignore
            if (s5 === peg$FAILED) {
// @ts-ignore
              s5 = peg$parseGE_OP();
            }
          }
        }
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseshift_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f11();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseshift_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseadditive_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseLEFT_OP();
// @ts-ignore
      if (s5 === peg$FAILED) {
// @ts-ignore
        s5 = peg$parseRIGHT_OP();
      }
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseadditive_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseLEFT_OP();
// @ts-ignore
        if (s5 === peg$FAILED) {
// @ts-ignore
          s5 = peg$parseRIGHT_OP();
        }
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseadditive_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f12();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseadditive_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parsemultiplicative_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parsePLUS();
// @ts-ignore
      if (s5 === peg$FAILED) {
// @ts-ignore
        s5 = peg$parseDASH();
      }
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parsemultiplicative_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parsePLUS();
// @ts-ignore
        if (s5 === peg$FAILED) {
// @ts-ignore
          s5 = peg$parseDASH();
        }
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parsemultiplicative_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f13();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parsemultiplicative_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseunary_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseSTAR();
// @ts-ignore
      if (s5 === peg$FAILED) {
// @ts-ignore
        s5 = peg$parseSLASH();
// @ts-ignore
        if (s5 === peg$FAILED) {
// @ts-ignore
          s5 = peg$parsePERCENT();
        }
      }
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseunary_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseSTAR();
// @ts-ignore
        if (s5 === peg$FAILED) {
// @ts-ignore
          s5 = peg$parseSLASH();
// @ts-ignore
          if (s5 === peg$FAILED) {
// @ts-ignore
            s5 = peg$parsePERCENT();
          }
        }
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseunary_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f14();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseunary_expression() {
// @ts-ignore
    var s0, s1, s2, s3;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseINC_OP();
// @ts-ignore
    if (s1 === peg$FAILED) {
// @ts-ignore
      s1 = peg$parseDEC_OP();
// @ts-ignore
      if (s1 === peg$FAILED) {
// @ts-ignore
        s1 = peg$parseunary_operator();
      }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = peg$parse_();
// @ts-ignore
      s3 = peg$parseunary_expression();
// @ts-ignore
      if (s3 !== peg$FAILED) {
// @ts-ignore
        peg$savedPos = s0;
// @ts-ignore
        s0 = peg$f15();
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$parsepostfix_expression();
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parsepostfix_expression() {
// @ts-ignore
    var s0, s1, s2, s3;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseprimary_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$parsepostfix_part();
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$parsepostfix_part();
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f16();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parsepostfix_part() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parse_();
// @ts-ignore
    s2 = peg$parseLEFT_BRACKET();
// @ts-ignore
    if (s2 !== peg$FAILED) {
// @ts-ignore
      s3 = peg$parse_();
// @ts-ignore
      s4 = peg$parseexpression();
// @ts-ignore
      if (s4 !== peg$FAILED) {
// @ts-ignore
        s5 = peg$parse_();
// @ts-ignore
        s6 = peg$parseRIGHT_BRACKET();
// @ts-ignore
        if (s6 !== peg$FAILED) {
// @ts-ignore
          peg$savedPos = s0;
// @ts-ignore
          s0 = peg$f17();
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s0;
// @ts-ignore
          s0 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$currPos;
// @ts-ignore
      s1 = peg$parse_();
// @ts-ignore
      s2 = peg$parseDOT();
// @ts-ignore
      if (s2 !== peg$FAILED) {
// @ts-ignore
        s3 = peg$parse_();
// @ts-ignore
        s4 = peg$parseIDENTIFIER();
// @ts-ignore
        if (s4 !== peg$FAILED) {
// @ts-ignore
          peg$savedPos = s0;
// @ts-ignore
          s0 = peg$f18();
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s0;
// @ts-ignore
          s0 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
      if (s0 === peg$FAILED) {
// @ts-ignore
        s0 = peg$currPos;
// @ts-ignore
        s1 = peg$parsefunction_call_arguments();
// @ts-ignore
        if (s1 !== peg$FAILED) {
// @ts-ignore
          peg$savedPos = s0;
// @ts-ignore
          s1 = peg$f19();
        }
// @ts-ignore
        s0 = s1;
// @ts-ignore
        if (s0 === peg$FAILED) {
// @ts-ignore
          s0 = peg$currPos;
// @ts-ignore
          s1 = peg$parse_();
// @ts-ignore
          s2 = peg$parseINC_OP();
// @ts-ignore
          if (s2 === peg$FAILED) {
// @ts-ignore
            s2 = peg$parseDEC_OP();
          }
// @ts-ignore
          if (s2 !== peg$FAILED) {
// @ts-ignore
            peg$savedPos = s0;
// @ts-ignore
            s0 = peg$f20();
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s0;
// @ts-ignore
            s0 = peg$FAILED;
          }
        }
      }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseprimary_expression() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6;

// @ts-ignore
    s0 = peg$parsevariable_identifier();
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$parseconstant();
// @ts-ignore
      if (s0 === peg$FAILED) {
// @ts-ignore
        s0 = peg$currPos;
// @ts-ignore
        s1 = peg$parse_();
// @ts-ignore
        s2 = peg$parseLEFT_PAREN();
// @ts-ignore
        if (s2 !== peg$FAILED) {
// @ts-ignore
          s3 = peg$parse_();
// @ts-ignore
          s4 = peg$parseexpression();
// @ts-ignore
          if (s4 !== peg$FAILED) {
// @ts-ignore
            s5 = peg$parse_();
// @ts-ignore
            s6 = peg$parseRIGHT_PAREN();
// @ts-ignore
            if (s6 !== peg$FAILED) {
// @ts-ignore
              peg$savedPos = s0;
// @ts-ignore
              s0 = peg$f21();
// @ts-ignore
            } else {
// @ts-ignore
              peg$currPos = s0;
// @ts-ignore
              s0 = peg$FAILED;
            }
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s0;
// @ts-ignore
            s0 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s0;
// @ts-ignore
          s0 = peg$FAILED;
        }
      }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parsevariable_identifier() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseIDENTIFIER();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f22();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseconstant() {
// @ts-ignore
    var s0;

// @ts-ignore
    s0 = peg$parseINTCONSTANT();
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$parseUINTCONSTANT();
// @ts-ignore
      if (s0 === peg$FAILED) {
// @ts-ignore
        s0 = peg$parseFLOATCONSTANT();
// @ts-ignore
        if (s0 === peg$FAILED) {
// @ts-ignore
          s0 = peg$parseBOOLCONSTANT();
        }
      }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parsefunction_call_arguments() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parse_();
// @ts-ignore
    s2 = peg$parseLEFT_PAREN();
// @ts-ignore
    if (s2 !== peg$FAILED) {
// @ts-ignore
      s3 = peg$parse_();
// @ts-ignore
      s4 = peg$parseargument_expression_list();
// @ts-ignore
      if (s4 === peg$FAILED) {
// @ts-ignore
        s4 = null;
      }
// @ts-ignore
      s5 = peg$parse_();
// @ts-ignore
      s6 = peg$parseRIGHT_PAREN();
// @ts-ignore
      if (s6 !== peg$FAILED) {
// @ts-ignore
        peg$savedPos = s0;
// @ts-ignore
        s0 = peg$f23();
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseargument_expression_list() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5, s6, s7;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$parseassignment_expression();
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      s3 = peg$currPos;
// @ts-ignore
      s4 = peg$parse_();
// @ts-ignore
      s5 = peg$parseCOMMA();
// @ts-ignore
      if (s5 !== peg$FAILED) {
// @ts-ignore
        s6 = peg$parse_();
// @ts-ignore
        s7 = peg$parseassignment_expression();
// @ts-ignore
        if (s7 !== peg$FAILED) {
// @ts-ignore
          s4 = [s4, s5, s6, s7];
// @ts-ignore
          s3 = s4;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s3;
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$parse_();
// @ts-ignore
        s5 = peg$parseCOMMA();
// @ts-ignore
        if (s5 !== peg$FAILED) {
// @ts-ignore
          s6 = peg$parse_();
// @ts-ignore
          s7 = peg$parseassignment_expression();
// @ts-ignore
          if (s7 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5, s6, s7];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
      }
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s0 = peg$f24();
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseassignment_operator() {
// @ts-ignore
    var s0;

// @ts-ignore
    s0 = peg$parseEQUAL();
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$parseMUL_ASSIGN();
// @ts-ignore
      if (s0 === peg$FAILED) {
// @ts-ignore
        s0 = peg$parseDIV_ASSIGN();
// @ts-ignore
        if (s0 === peg$FAILED) {
// @ts-ignore
          s0 = peg$parseMOD_ASSIGN();
// @ts-ignore
          if (s0 === peg$FAILED) {
// @ts-ignore
            s0 = peg$parseADD_ASSIGN();
// @ts-ignore
            if (s0 === peg$FAILED) {
// @ts-ignore
              s0 = peg$parseSUB_ASSIGN();
// @ts-ignore
              if (s0 === peg$FAILED) {
// @ts-ignore
                s0 = peg$parseLEFT_ASSIGN();
// @ts-ignore
                if (s0 === peg$FAILED) {
// @ts-ignore
                  s0 = peg$parseRIGHT_ASSIGN();
// @ts-ignore
                  if (s0 === peg$FAILED) {
// @ts-ignore
                    s0 = peg$parseAND_ASSIGN();
// @ts-ignore
                    if (s0 === peg$FAILED) {
// @ts-ignore
                      s0 = peg$parseXOR_ASSIGN();
// @ts-ignore
                      if (s0 === peg$FAILED) {
// @ts-ignore
                        s0 = peg$parseOR_ASSIGN();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseunary_operator() {
// @ts-ignore
    var s0;

// @ts-ignore
    s0 = peg$parsePLUS();
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$parseDASH();
// @ts-ignore
      if (s0 === peg$FAILED) {
// @ts-ignore
        s0 = peg$parseBANG();
// @ts-ignore
        if (s0 === peg$FAILED) {
// @ts-ignore
          s0 = peg$parseTILDE();
        }
      }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseIDENTIFIER() {
// @ts-ignore
    var s0, s1, s2, s3, s4;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = peg$currPos;
// @ts-ignore
    peg$silentFails++;
// @ts-ignore
    s2 = peg$parseKeyword();
// @ts-ignore
    peg$silentFails--;
// @ts-ignore
    if (s2 === peg$FAILED) {
// @ts-ignore
      s1 = undefined;
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s1;
// @ts-ignore
      s1 = peg$FAILED;
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      if (peg$r0.test(input.charAt(peg$currPos))) {
// @ts-ignore
        s2 = input.charAt(peg$currPos);
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s2 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e0); }
      }
// @ts-ignore
      if (s2 !== peg$FAILED) {
// @ts-ignore
        s3 = [];
// @ts-ignore
        if (peg$r1.test(input.charAt(peg$currPos))) {
// @ts-ignore
          s4 = input.charAt(peg$currPos);
// @ts-ignore
          peg$currPos++;
// @ts-ignore
        } else {
// @ts-ignore
          s4 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e1); }
        }
// @ts-ignore
        while (s4 !== peg$FAILED) {
// @ts-ignore
          s3.push(s4);
// @ts-ignore
          if (peg$r1.test(input.charAt(peg$currPos))) {
// @ts-ignore
            s4 = input.charAt(peg$currPos);
// @ts-ignore
            peg$currPos++;
// @ts-ignore
          } else {
// @ts-ignore
            s4 = peg$FAILED;
// @ts-ignore
            if (peg$silentFails === 0) { peg$fail(peg$e1); }
          }
        }
// @ts-ignore
        peg$savedPos = s0;
// @ts-ignore
        s0 = peg$f25();
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseINTCONSTANT() {
// @ts-ignore
    var s0, s1, s2;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = [];
// @ts-ignore
    if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
      s2 = input.charAt(peg$currPos);
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s2 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e2); }
    }
// @ts-ignore
    if (s2 !== peg$FAILED) {
// @ts-ignore
      while (s2 !== peg$FAILED) {
// @ts-ignore
        s1.push(s2);
// @ts-ignore
        if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
          s2 = input.charAt(peg$currPos);
// @ts-ignore
          peg$currPos++;
// @ts-ignore
        } else {
// @ts-ignore
          s2 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
      }
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f26();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseUINTCONSTANT() {
// @ts-ignore
    var s0, s1, s2;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = [];
// @ts-ignore
    if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
      s2 = input.charAt(peg$currPos);
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s2 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e2); }
    }
// @ts-ignore
    if (s2 !== peg$FAILED) {
// @ts-ignore
      while (s2 !== peg$FAILED) {
// @ts-ignore
        s1.push(s2);
// @ts-ignore
        if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
          s2 = input.charAt(peg$currPos);
// @ts-ignore
          peg$currPos++;
// @ts-ignore
        } else {
// @ts-ignore
          s2 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
      }
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      if (peg$r3.test(input.charAt(peg$currPos))) {
// @ts-ignore
        s2 = input.charAt(peg$currPos);
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s2 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e3); }
      }
// @ts-ignore
      if (s2 !== peg$FAILED) {
// @ts-ignore
        peg$savedPos = s0;
// @ts-ignore
        s0 = peg$f27();
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseFLOATCONSTANT() {
// @ts-ignore
    var s0, s1, s2, s3, s4;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    s1 = [];
// @ts-ignore
    if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
      s2 = input.charAt(peg$currPos);
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s2 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e2); }
    }
// @ts-ignore
    if (s2 !== peg$FAILED) {
// @ts-ignore
      while (s2 !== peg$FAILED) {
// @ts-ignore
        s1.push(s2);
// @ts-ignore
        if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
          s2 = input.charAt(peg$currPos);
// @ts-ignore
          peg$currPos++;
// @ts-ignore
        } else {
// @ts-ignore
          s2 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
      }
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      if (input.charCodeAt(peg$currPos) === 46) {
// @ts-ignore
        s2 = peg$c0;
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s2 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e4); }
      }
// @ts-ignore
      if (s2 !== peg$FAILED) {
// @ts-ignore
        s3 = [];
// @ts-ignore
        if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
          s4 = input.charAt(peg$currPos);
// @ts-ignore
          peg$currPos++;
// @ts-ignore
        } else {
// @ts-ignore
          s4 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
// @ts-ignore
        while (s4 !== peg$FAILED) {
// @ts-ignore
          s3.push(s4);
// @ts-ignore
          if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
            s4 = input.charAt(peg$currPos);
// @ts-ignore
            peg$currPos++;
// @ts-ignore
          } else {
// @ts-ignore
            s4 = peg$FAILED;
// @ts-ignore
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
        }
// @ts-ignore
        s4 = peg$parseExponentPart();
// @ts-ignore
        if (s4 === peg$FAILED) {
// @ts-ignore
          s4 = null;
        }
// @ts-ignore
        peg$savedPos = s0;
// @ts-ignore
        s0 = peg$f28();
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$currPos;
// @ts-ignore
      if (input.charCodeAt(peg$currPos) === 46) {
// @ts-ignore
        s1 = peg$c0;
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s1 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e4); }
      }
// @ts-ignore
      if (s1 !== peg$FAILED) {
// @ts-ignore
        s2 = [];
// @ts-ignore
        if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
          s3 = input.charAt(peg$currPos);
// @ts-ignore
          peg$currPos++;
// @ts-ignore
        } else {
// @ts-ignore
          s3 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
// @ts-ignore
        if (s3 !== peg$FAILED) {
// @ts-ignore
          while (s3 !== peg$FAILED) {
// @ts-ignore
            s2.push(s3);
// @ts-ignore
            if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
              s3 = input.charAt(peg$currPos);
// @ts-ignore
              peg$currPos++;
// @ts-ignore
            } else {
// @ts-ignore
              s3 = peg$FAILED;
// @ts-ignore
              if (peg$silentFails === 0) { peg$fail(peg$e2); }
            }
          }
// @ts-ignore
        } else {
// @ts-ignore
          s2 = peg$FAILED;
        }
// @ts-ignore
        if (s2 !== peg$FAILED) {
// @ts-ignore
          s3 = peg$parseExponentPart();
// @ts-ignore
          if (s3 === peg$FAILED) {
// @ts-ignore
            s3 = null;
          }
// @ts-ignore
          peg$savedPos = s0;
// @ts-ignore
          s0 = peg$f29();
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s0;
// @ts-ignore
          s0 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
      if (s0 === peg$FAILED) {
// @ts-ignore
        s0 = peg$currPos;
// @ts-ignore
        s1 = [];
// @ts-ignore
        if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
          s2 = input.charAt(peg$currPos);
// @ts-ignore
          peg$currPos++;
// @ts-ignore
        } else {
// @ts-ignore
          s2 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
// @ts-ignore
        if (s2 !== peg$FAILED) {
// @ts-ignore
          while (s2 !== peg$FAILED) {
// @ts-ignore
            s1.push(s2);
// @ts-ignore
            if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
              s2 = input.charAt(peg$currPos);
// @ts-ignore
              peg$currPos++;
// @ts-ignore
            } else {
// @ts-ignore
              s2 = peg$FAILED;
// @ts-ignore
              if (peg$silentFails === 0) { peg$fail(peg$e2); }
            }
          }
// @ts-ignore
        } else {
// @ts-ignore
          s1 = peg$FAILED;
        }
// @ts-ignore
        if (s1 !== peg$FAILED) {
// @ts-ignore
          s2 = peg$parseExponentPart();
// @ts-ignore
          if (s2 !== peg$FAILED) {
// @ts-ignore
            peg$savedPos = s0;
// @ts-ignore
            s0 = peg$f30();
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s0;
// @ts-ignore
            s0 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s0;
// @ts-ignore
          s0 = peg$FAILED;
        }
      }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseExponentPart() {
// @ts-ignore
    var s0, s1, s2, s3, s4;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (peg$r4.test(input.charAt(peg$currPos))) {
// @ts-ignore
      s1 = input.charAt(peg$currPos);
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e5); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      if (peg$r5.test(input.charAt(peg$currPos))) {
// @ts-ignore
        s2 = input.charAt(peg$currPos);
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s2 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e6); }
      }
// @ts-ignore
      if (s2 === peg$FAILED) {
// @ts-ignore
        s2 = null;
      }
// @ts-ignore
      s3 = [];
// @ts-ignore
      if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
        s4 = input.charAt(peg$currPos);
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s4 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e2); }
      }
// @ts-ignore
      if (s4 !== peg$FAILED) {
// @ts-ignore
        while (s4 !== peg$FAILED) {
// @ts-ignore
          s3.push(s4);
// @ts-ignore
          if (peg$r2.test(input.charAt(peg$currPos))) {
// @ts-ignore
            s4 = input.charAt(peg$currPos);
// @ts-ignore
            peg$currPos++;
// @ts-ignore
          } else {
// @ts-ignore
            s4 = peg$FAILED;
// @ts-ignore
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
        }
// @ts-ignore
      } else {
// @ts-ignore
        s3 = peg$FAILED;
      }
// @ts-ignore
      if (s3 !== peg$FAILED) {
// @ts-ignore
        s1 = [s1, s2, s3];
// @ts-ignore
        s0 = s1;
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseBOOLCONSTANT() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 4) === peg$c1) {
// @ts-ignore
      s1 = peg$c1;
// @ts-ignore
      peg$currPos += 4;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e7); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f31();
    }
// @ts-ignore
    s0 = s1;
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$currPos;
// @ts-ignore
      if (input.substr(peg$currPos, 5) === peg$c2) {
// @ts-ignore
        s1 = peg$c2;
// @ts-ignore
        peg$currPos += 5;
// @ts-ignore
      } else {
// @ts-ignore
        s1 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e8); }
      }
// @ts-ignore
      if (s1 !== peg$FAILED) {
// @ts-ignore
        peg$savedPos = s0;
// @ts-ignore
        s1 = peg$f32();
      }
// @ts-ignore
      s0 = s1;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseLEFT_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c3) {
// @ts-ignore
      s1 = peg$c3;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e9); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f33();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseRIGHT_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c4) {
// @ts-ignore
      s1 = peg$c4;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e10); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f34();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseINC_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c5) {
// @ts-ignore
      s1 = peg$c5;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e11); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f35();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseDEC_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c6) {
// @ts-ignore
      s1 = peg$c6;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e12); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f36();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseLE_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c7) {
// @ts-ignore
      s1 = peg$c7;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e13); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f37();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseGE_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c8) {
// @ts-ignore
      s1 = peg$c8;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e14); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f38();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseEQ_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c9) {
// @ts-ignore
      s1 = peg$c9;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e15); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f39();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseNE_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c10) {
// @ts-ignore
      s1 = peg$c10;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e16); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f40();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseAND_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c11) {
// @ts-ignore
      s1 = peg$c11;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e17); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f41();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseOR_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c12) {
// @ts-ignore
      s1 = peg$c12;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e18); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f42();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseXOR_OP() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c13) {
// @ts-ignore
      s1 = peg$c13;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e19); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f43();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseMUL_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c14) {
// @ts-ignore
      s1 = peg$c14;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e20); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f44();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseDIV_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c15) {
// @ts-ignore
      s1 = peg$c15;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e21); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f45();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseADD_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c16) {
// @ts-ignore
      s1 = peg$c16;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e22); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f46();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseMOD_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c17) {
// @ts-ignore
      s1 = peg$c17;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e23); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f47();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseLEFT_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 3) === peg$c18) {
// @ts-ignore
      s1 = peg$c18;
// @ts-ignore
      peg$currPos += 3;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e24); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f48();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseRIGHT_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 3) === peg$c19) {
// @ts-ignore
      s1 = peg$c19;
// @ts-ignore
      peg$currPos += 3;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e25); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f49();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseAND_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c20) {
// @ts-ignore
      s1 = peg$c20;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e26); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f50();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseXOR_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c21) {
// @ts-ignore
      s1 = peg$c21;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e27); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f51();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseOR_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c22) {
// @ts-ignore
      s1 = peg$c22;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e28); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f52();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseSUB_ASSIGN() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c23) {
// @ts-ignore
      s1 = peg$c23;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e29); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f53();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseEQUAL() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 61) {
// @ts-ignore
      s1 = peg$c24;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e30); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f54();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseLEFT_PAREN() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 40) {
// @ts-ignore
      s0 = peg$c25;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e31); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseRIGHT_PAREN() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 41) {
// @ts-ignore
      s0 = peg$c26;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e32); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseLEFT_BRACKET() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 91) {
// @ts-ignore
      s0 = peg$c27;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e33); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseRIGHT_BRACKET() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 93) {
// @ts-ignore
      s0 = peg$c28;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e34); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseLEFT_BRACE() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 123) {
// @ts-ignore
      s0 = peg$c29;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e35); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseRIGHT_BRACE() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 125) {
// @ts-ignore
      s0 = peg$c30;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e36); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseDOT() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 46) {
// @ts-ignore
      s0 = peg$c0;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e4); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseCOMMA() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 44) {
// @ts-ignore
      s0 = peg$c31;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e37); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseCOLON() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 58) {
// @ts-ignore
      s0 = peg$c32;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e38); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseSEMICOLON() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 59) {
// @ts-ignore
      s0 = peg$c33;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e39); }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseBANG() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 33) {
// @ts-ignore
      s1 = peg$c34;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e40); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f55();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseDASH() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 45) {
// @ts-ignore
      s1 = peg$c35;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e41); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f56();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseTILDE() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 126) {
// @ts-ignore
      s1 = peg$c36;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e42); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f57();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parsePLUS() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 43) {
// @ts-ignore
      s1 = peg$c37;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e43); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f58();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseSTAR() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 42) {
// @ts-ignore
      s1 = peg$c38;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e44); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f59();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseSLASH() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 47) {
// @ts-ignore
      s1 = peg$c39;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e45); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f60();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parsePERCENT() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 37) {
// @ts-ignore
      s1 = peg$c40;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e46); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f61();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseLEFT_ANGLE() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 60) {
// @ts-ignore
      s1 = peg$c41;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e47); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f62();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseRIGHT_ANGLE() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 62) {
// @ts-ignore
      s1 = peg$c42;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e48); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f63();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseVERTICAL_BAR() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 124) {
// @ts-ignore
      s1 = peg$c43;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e49); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f64();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseCARET() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 94) {
// @ts-ignore
      s1 = peg$c44;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e50); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f65();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseAMPERSAND() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 38) {
// @ts-ignore
      s1 = peg$c45;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e51); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f66();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseQUESTION() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.charCodeAt(peg$currPos) === 63) {
// @ts-ignore
      s1 = peg$c46;
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e52); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      peg$savedPos = s0;
// @ts-ignore
      s1 = peg$f67();
    }
// @ts-ignore
    s0 = s1;

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parse_() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    peg$silentFails++;
// @ts-ignore
    s0 = [];
// @ts-ignore
    if (peg$r6.test(input.charAt(peg$currPos))) {
// @ts-ignore
      s1 = input.charAt(peg$currPos);
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e54); }
    }
// @ts-ignore
    if (s1 === peg$FAILED) {
// @ts-ignore
      s1 = peg$parsecomment();
    }
// @ts-ignore
    while (s1 !== peg$FAILED) {
// @ts-ignore
      s0.push(s1);
// @ts-ignore
      if (peg$r6.test(input.charAt(peg$currPos))) {
// @ts-ignore
        s1 = input.charAt(peg$currPos);
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s1 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e54); }
      }
// @ts-ignore
      if (s1 === peg$FAILED) {
// @ts-ignore
        s1 = peg$parsecomment();
      }
    }
// @ts-ignore
    peg$silentFails--;
// @ts-ignore
    s1 = peg$FAILED;
// @ts-ignore
    if (peg$silentFails === 0) { peg$fail(peg$e53); }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parsecomment() {
// @ts-ignore
    var s0, s1, s2, s3, s4, s5;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    if (input.substr(peg$currPos, 2) === peg$c47) {
// @ts-ignore
      s1 = peg$c47;
// @ts-ignore
      peg$currPos += 2;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e55); }
    }
// @ts-ignore
    if (s1 !== peg$FAILED) {
// @ts-ignore
      s2 = [];
// @ts-ignore
      if (peg$r7.test(input.charAt(peg$currPos))) {
// @ts-ignore
        s3 = input.charAt(peg$currPos);
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s3 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e56); }
      }
// @ts-ignore
      while (s3 !== peg$FAILED) {
// @ts-ignore
        s2.push(s3);
// @ts-ignore
        if (peg$r7.test(input.charAt(peg$currPos))) {
// @ts-ignore
          s3 = input.charAt(peg$currPos);
// @ts-ignore
          peg$currPos++;
// @ts-ignore
        } else {
// @ts-ignore
          s3 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e56); }
        }
      }
// @ts-ignore
      if (input.charCodeAt(peg$currPos) === 10) {
// @ts-ignore
        s3 = peg$c48;
// @ts-ignore
        peg$currPos++;
// @ts-ignore
      } else {
// @ts-ignore
        s3 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e57); }
      }
// @ts-ignore
      if (s3 !== peg$FAILED) {
// @ts-ignore
        s1 = [s1, s2, s3];
// @ts-ignore
        s0 = s1;
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      s0 = peg$currPos;
// @ts-ignore
      if (input.substr(peg$currPos, 2) === peg$c49) {
// @ts-ignore
        s1 = peg$c49;
// @ts-ignore
        peg$currPos += 2;
// @ts-ignore
      } else {
// @ts-ignore
        s1 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e58); }
      }
// @ts-ignore
      if (s1 !== peg$FAILED) {
// @ts-ignore
        s2 = [];
// @ts-ignore
        s3 = peg$currPos;
// @ts-ignore
        s4 = peg$currPos;
// @ts-ignore
        peg$silentFails++;
// @ts-ignore
        if (input.substr(peg$currPos, 2) === peg$c50) {
// @ts-ignore
          s5 = peg$c50;
// @ts-ignore
          peg$currPos += 2;
// @ts-ignore
        } else {
// @ts-ignore
          s5 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e59); }
        }
// @ts-ignore
        peg$silentFails--;
// @ts-ignore
        if (s5 === peg$FAILED) {
// @ts-ignore
          s4 = undefined;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s4;
// @ts-ignore
          s4 = peg$FAILED;
        }
// @ts-ignore
        if (s4 !== peg$FAILED) {
// @ts-ignore
          if (input.length > peg$currPos) {
// @ts-ignore
            s5 = input.charAt(peg$currPos);
// @ts-ignore
            peg$currPos++;
// @ts-ignore
          } else {
// @ts-ignore
            s5 = peg$FAILED;
// @ts-ignore
            if (peg$silentFails === 0) { peg$fail(peg$e60); }
          }
// @ts-ignore
          if (s5 !== peg$FAILED) {
// @ts-ignore
            s4 = [s4, s5];
// @ts-ignore
            s3 = s4;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s3;
// @ts-ignore
          s3 = peg$FAILED;
        }
// @ts-ignore
        while (s3 !== peg$FAILED) {
// @ts-ignore
          s2.push(s3);
// @ts-ignore
          s3 = peg$currPos;
// @ts-ignore
          s4 = peg$currPos;
// @ts-ignore
          peg$silentFails++;
// @ts-ignore
          if (input.substr(peg$currPos, 2) === peg$c50) {
// @ts-ignore
            s5 = peg$c50;
// @ts-ignore
            peg$currPos += 2;
// @ts-ignore
          } else {
// @ts-ignore
            s5 = peg$FAILED;
// @ts-ignore
            if (peg$silentFails === 0) { peg$fail(peg$e59); }
          }
// @ts-ignore
          peg$silentFails--;
// @ts-ignore
          if (s5 === peg$FAILED) {
// @ts-ignore
            s4 = undefined;
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s4;
// @ts-ignore
            s4 = peg$FAILED;
          }
// @ts-ignore
          if (s4 !== peg$FAILED) {
// @ts-ignore
            if (input.length > peg$currPos) {
// @ts-ignore
              s5 = input.charAt(peg$currPos);
// @ts-ignore
              peg$currPos++;
// @ts-ignore
            } else {
// @ts-ignore
              s5 = peg$FAILED;
// @ts-ignore
              if (peg$silentFails === 0) { peg$fail(peg$e60); }
            }
// @ts-ignore
            if (s5 !== peg$FAILED) {
// @ts-ignore
              s4 = [s4, s5];
// @ts-ignore
              s3 = s4;
// @ts-ignore
            } else {
// @ts-ignore
              peg$currPos = s3;
// @ts-ignore
              s3 = peg$FAILED;
            }
// @ts-ignore
          } else {
// @ts-ignore
            peg$currPos = s3;
// @ts-ignore
            s3 = peg$FAILED;
          }
        }
// @ts-ignore
        if (input.substr(peg$currPos, 2) === peg$c50) {
// @ts-ignore
          s3 = peg$c50;
// @ts-ignore
          peg$currPos += 2;
// @ts-ignore
        } else {
// @ts-ignore
          s3 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e59); }
        }
// @ts-ignore
        if (s3 !== peg$FAILED) {
// @ts-ignore
          s1 = [s1, s2, s3];
// @ts-ignore
          s0 = s1;
// @ts-ignore
        } else {
// @ts-ignore
          peg$currPos = s0;
// @ts-ignore
          s0 = peg$FAILED;
        }
// @ts-ignore
      } else {
// @ts-ignore
        peg$currPos = s0;
// @ts-ignore
        s0 = peg$FAILED;
      }
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseEOF() {
// @ts-ignore
    var s0, s1;

// @ts-ignore
    s0 = peg$currPos;
// @ts-ignore
    peg$silentFails++;
// @ts-ignore
    if (input.length > peg$currPos) {
// @ts-ignore
      s1 = input.charAt(peg$currPos);
// @ts-ignore
      peg$currPos++;
// @ts-ignore
    } else {
// @ts-ignore
      s1 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e60); }
    }
// @ts-ignore
    peg$silentFails--;
// @ts-ignore
    if (s1 === peg$FAILED) {
// @ts-ignore
      s0 = undefined;
// @ts-ignore
    } else {
// @ts-ignore
      peg$currPos = s0;
// @ts-ignore
      s0 = peg$FAILED;
    }

// @ts-ignore
    return s0;
  }

// @ts-ignore
  function // @ts-ignore
peg$parseKeyword() {
// @ts-ignore
    var s0;

// @ts-ignore
    if (input.substr(peg$currPos, 5) === peg$c51) {
// @ts-ignore
      s0 = peg$c51;
// @ts-ignore
      peg$currPos += 5;
// @ts-ignore
    } else {
// @ts-ignore
      s0 = peg$FAILED;
// @ts-ignore
      if (peg$silentFails === 0) { peg$fail(peg$e61); }
    }
// @ts-ignore
    if (s0 === peg$FAILED) {
// @ts-ignore
      if (input.substr(peg$currPos, 4) === peg$c52) {
// @ts-ignore
        s0 = peg$c52;
// @ts-ignore
        peg$currPos += 4;
// @ts-ignore
      } else {
// @ts-ignore
        s0 = peg$FAILED;
// @ts-ignore
        if (peg$silentFails === 0) { peg$fail(peg$e62); }
      }
// @ts-ignore
      if (s0 === peg$FAILED) {
// @ts-ignore
        if (input.substr(peg$currPos, 5) === peg$c53) {
// @ts-ignore
          s0 = peg$c53;
// @ts-ignore
          peg$currPos += 5;
// @ts-ignore
        } else {
// @ts-ignore
          s0 = peg$FAILED;
// @ts-ignore
          if (peg$silentFails === 0) { peg$fail(peg$e63); }
        }
// @ts-ignore
        if (s0 === peg$FAILED) {
// @ts-ignore
          if (input.substr(peg$currPos, 3) === peg$c54) {
// @ts-ignore
            s0 = peg$c54;
// @ts-ignore
            peg$currPos += 3;
// @ts-ignore
          } else {
// @ts-ignore
            s0 = peg$FAILED;
// @ts-ignore
            if (peg$silentFails === 0) { peg$fail(peg$e64); }
          }
// @ts-ignore
          if (s0 === peg$FAILED) {
// @ts-ignore
            if (input.substr(peg$currPos, 4) === peg$c55) {
// @ts-ignore
              s0 = peg$c55;
// @ts-ignore
              peg$currPos += 4;
// @ts-ignore
            } else {
// @ts-ignore
              s0 = peg$FAILED;
// @ts-ignore
              if (peg$silentFails === 0) { peg$fail(peg$e65); }
            }
// @ts-ignore
            if (s0 === peg$FAILED) {
// @ts-ignore
              if (input.substr(peg$currPos, 5) === peg$c56) {
// @ts-ignore
                s0 = peg$c56;
// @ts-ignore
                peg$currPos += 5;
// @ts-ignore
              } else {
// @ts-ignore
                s0 = peg$FAILED;
// @ts-ignore
                if (peg$silentFails === 0) { peg$fail(peg$e66); }
              }
// @ts-ignore
              if (s0 === peg$FAILED) {
// @ts-ignore
                if (input.substr(peg$currPos, 8) === peg$c57) {
// @ts-ignore
                  s0 = peg$c57;
// @ts-ignore
                  peg$currPos += 8;
// @ts-ignore
                } else {
// @ts-ignore
                  s0 = peg$FAILED;
// @ts-ignore
                  if (peg$silentFails === 0) { peg$fail(peg$e67); }
                }
// @ts-ignore
                if (s0 === peg$FAILED) {
// @ts-ignore
                  if (input.substr(peg$currPos, 2) === peg$c58) {
// @ts-ignore
                    s0 = peg$c58;
// @ts-ignore
                    peg$currPos += 2;
// @ts-ignore
                  } else {
// @ts-ignore
                    s0 = peg$FAILED;
// @ts-ignore
                    if (peg$silentFails === 0) { peg$fail(peg$e68); }
                  }
// @ts-ignore
                  if (s0 === peg$FAILED) {
// @ts-ignore
                    if (input.substr(peg$currPos, 4) === peg$c59) {
// @ts-ignore
                      s0 = peg$c59;
// @ts-ignore
                      peg$currPos += 4;
// @ts-ignore
                    } else {
// @ts-ignore
                      s0 = peg$FAILED;
// @ts-ignore
                      if (peg$silentFails === 0) { peg$fail(peg$e69); }
                    }
// @ts-ignore
                    if (s0 === peg$FAILED) {
// @ts-ignore
                      if (input.substr(peg$currPos, 3) === peg$c60) {
// @ts-ignore
                        s0 = peg$c60;
// @ts-ignore
                        peg$currPos += 3;
// @ts-ignore
                      } else {
// @ts-ignore
                        s0 = peg$FAILED;
// @ts-ignore
                        if (peg$silentFails === 0) { peg$fail(peg$e70); }
                      }
// @ts-ignore
                      if (s0 === peg$FAILED) {
// @ts-ignore
                        if (input.substr(peg$currPos, 2) === peg$c61) {
// @ts-ignore
                          s0 = peg$c61;
// @ts-ignore
                          peg$currPos += 2;
// @ts-ignore
                        } else {
// @ts-ignore
                          s0 = peg$FAILED;
// @ts-ignore
                          if (peg$silentFails === 0) { peg$fail(peg$e71); }
                        }
// @ts-ignore
                        if (s0 === peg$FAILED) {
// @ts-ignore
                          if (input.substr(peg$currPos, 7) === peg$c62) {
// @ts-ignore
                            s0 = peg$c62;
// @ts-ignore
                            peg$currPos += 7;
// @ts-ignore
                          } else {
// @ts-ignore
                            s0 = peg$FAILED;
// @ts-ignore
                            if (peg$silentFails === 0) { peg$fail(peg$e72); }
                          }
// @ts-ignore
                          if (s0 === peg$FAILED) {
// @ts-ignore
                            if (input.substr(peg$currPos, 6) === peg$c63) {
// @ts-ignore
                              s0 = peg$c63;
// @ts-ignore
                              peg$currPos += 6;
// @ts-ignore
                            } else {
// @ts-ignore
                              s0 = peg$FAILED;
// @ts-ignore
                              if (peg$silentFails === 0) { peg$fail(peg$e73); }
                            }
// @ts-ignore
                            if (s0 === peg$FAILED) {
// @ts-ignore
                              if (input.substr(peg$currPos, 6) === peg$c64) {
// @ts-ignore
                                s0 = peg$c64;
// @ts-ignore
                                peg$currPos += 6;
// @ts-ignore
                              } else {
// @ts-ignore
                                s0 = peg$FAILED;
// @ts-ignore
                                if (peg$silentFails === 0) { peg$fail(peg$e74); }
                              }
// @ts-ignore
                              if (s0 === peg$FAILED) {
// @ts-ignore
                                if (input.substr(peg$currPos, 4) === peg$c65) {
// @ts-ignore
                                  s0 = peg$c65;
// @ts-ignore
                                  peg$currPos += 4;
// @ts-ignore
                                } else {
// @ts-ignore
                                  s0 = peg$FAILED;
// @ts-ignore
                                  if (peg$silentFails === 0) { peg$fail(peg$e75); }
                                }
// @ts-ignore
                                if (s0 === peg$FAILED) {
// @ts-ignore
                                  if (input.substr(peg$currPos, 7) === peg$c66) {
// @ts-ignore
                                    s0 = peg$c66;
// @ts-ignore
                                    peg$currPos += 7;
// @ts-ignore
                                  } else {
// @ts-ignore
                                    s0 = peg$FAILED;
// @ts-ignore
                                    if (peg$silentFails === 0) { peg$fail(peg$e76); }
                                  }
// @ts-ignore
                                  if (s0 === peg$FAILED) {
// @ts-ignore
                                    if (input.substr(peg$currPos, 5) === peg$c67) {
// @ts-ignore
                                      s0 = peg$c67;
// @ts-ignore
                                      peg$currPos += 5;
// @ts-ignore
                                    } else {
// @ts-ignore
                                      s0 = peg$FAILED;
// @ts-ignore
                                      if (peg$silentFails === 0) { peg$fail(peg$e77); }
                                    }
// @ts-ignore
                                    if (s0 === peg$FAILED) {
// @ts-ignore
                                      if (input.substr(peg$currPos, 5) === peg$c68) {
// @ts-ignore
                                        s0 = peg$c68;
// @ts-ignore
                                        peg$currPos += 5;
// @ts-ignore
                                      } else {
// @ts-ignore
                                        s0 = peg$FAILED;
// @ts-ignore
                                        if (peg$silentFails === 0) { peg$fail(peg$e78); }
                                      }
// @ts-ignore
                                      if (s0 === peg$FAILED) {
// @ts-ignore
                                        if (input.substr(peg$currPos, 5) === peg$c69) {
// @ts-ignore
                                          s0 = peg$c69;
// @ts-ignore
                                          peg$currPos += 5;
// @ts-ignore
                                        } else {
// @ts-ignore
                                          s0 = peg$FAILED;
// @ts-ignore
                                          if (peg$silentFails === 0) { peg$fail(peg$e79); }
                                        }
// @ts-ignore
                                        if (s0 === peg$FAILED) {
// @ts-ignore
                                          if (input.substr(peg$currPos, 5) === peg$c70) {
// @ts-ignore
                                            s0 = peg$c70;
// @ts-ignore
                                            peg$currPos += 5;
// @ts-ignore
                                          } else {
// @ts-ignore
                                            s0 = peg$FAILED;
// @ts-ignore
                                            if (peg$silentFails === 0) { peg$fail(peg$e80); }
                                          }
// @ts-ignore
                                          if (s0 === peg$FAILED) {
// @ts-ignore
                                            if (input.substr(peg$currPos, 5) === peg$c71) {
// @ts-ignore
                                              s0 = peg$c71;
// @ts-ignore
                                              peg$currPos += 5;
// @ts-ignore
                                            } else {
// @ts-ignore
                                              s0 = peg$FAILED;
// @ts-ignore
                                              if (peg$silentFails === 0) { peg$fail(peg$e81); }
                                            }
// @ts-ignore
                                            if (s0 === peg$FAILED) {
// @ts-ignore
                                              if (input.substr(peg$currPos, 5) === peg$c72) {
// @ts-ignore
                                                s0 = peg$c72;
// @ts-ignore
                                                peg$currPos += 5;
// @ts-ignore
                                              } else {
// @ts-ignore
                                                s0 = peg$FAILED;
// @ts-ignore
                                                if (peg$silentFails === 0) { peg$fail(peg$e82); }
                                              }
// @ts-ignore
                                              if (s0 === peg$FAILED) {
// @ts-ignore
                                                if (input.substr(peg$currPos, 5) === peg$c73) {
// @ts-ignore
                                                  s0 = peg$c73;
// @ts-ignore
                                                  peg$currPos += 5;
// @ts-ignore
                                                } else {
// @ts-ignore
                                                  s0 = peg$FAILED;
// @ts-ignore
                                                  if (peg$silentFails === 0) { peg$fail(peg$e83); }
                                                }
// @ts-ignore
                                                if (s0 === peg$FAILED) {
// @ts-ignore
                                                  if (input.substr(peg$currPos, 5) === peg$c74) {
// @ts-ignore
                                                    s0 = peg$c74;
// @ts-ignore
                                                    peg$currPos += 5;
// @ts-ignore
                                                  } else {
// @ts-ignore
                                                    s0 = peg$FAILED;
// @ts-ignore
                                                    if (peg$silentFails === 0) { peg$fail(peg$e84); }
                                                  }
// @ts-ignore
                                                  if (s0 === peg$FAILED) {
// @ts-ignore
                                                    if (input.substr(peg$currPos, 5) === peg$c75) {
// @ts-ignore
                                                      s0 = peg$c75;
// @ts-ignore
                                                      peg$currPos += 5;
// @ts-ignore
                                                    } else {
// @ts-ignore
                                                      s0 = peg$FAILED;
// @ts-ignore
                                                      if (peg$silentFails === 0) { peg$fail(peg$e85); }
                                                    }
// @ts-ignore
                                                    if (s0 === peg$FAILED) {
// @ts-ignore
                                                      if (input.substr(peg$currPos, 4) === peg$c76) {
// @ts-ignore
                                                        s0 = peg$c76;
// @ts-ignore
                                                        peg$currPos += 4;
// @ts-ignore
                                                      } else {
// @ts-ignore
                                                        s0 = peg$FAILED;
// @ts-ignore
                                                        if (peg$silentFails === 0) { peg$fail(peg$e86); }
                                                      }
// @ts-ignore
                                                      if (s0 === peg$FAILED) {
// @ts-ignore
                                                        if (input.substr(peg$currPos, 4) === peg$c77) {
// @ts-ignore
                                                          s0 = peg$c77;
// @ts-ignore
                                                          peg$currPos += 4;
// @ts-ignore
                                                        } else {
// @ts-ignore
                                                          s0 = peg$FAILED;
// @ts-ignore
                                                          if (peg$silentFails === 0) { peg$fail(peg$e87); }
                                                        }
// @ts-ignore
                                                        if (s0 === peg$FAILED) {
// @ts-ignore
                                                          if (input.substr(peg$currPos, 4) === peg$c78) {
// @ts-ignore
                                                            s0 = peg$c78;
// @ts-ignore
                                                            peg$currPos += 4;
// @ts-ignore
                                                          } else {
// @ts-ignore
                                                            s0 = peg$FAILED;
// @ts-ignore
                                                            if (peg$silentFails === 0) { peg$fail(peg$e88); }
                                                          }
// @ts-ignore
                                                          if (s0 === peg$FAILED) {
// @ts-ignore
                                                            if (input.substr(peg$currPos, 4) === peg$c79) {
// @ts-ignore
                                                              s0 = peg$c79;
// @ts-ignore
                                                              peg$currPos += 4;
// @ts-ignore
                                                            } else {
// @ts-ignore
                                                              s0 = peg$FAILED;
// @ts-ignore
                                                              if (peg$silentFails === 0) { peg$fail(peg$e89); }
                                                            }
// @ts-ignore
                                                            if (s0 === peg$FAILED) {
// @ts-ignore
                                                              if (input.substr(peg$currPos, 4) === peg$c80) {
// @ts-ignore
                                                                s0 = peg$c80;
// @ts-ignore
                                                                peg$currPos += 4;
// @ts-ignore
                                                              } else {
// @ts-ignore
                                                                s0 = peg$FAILED;
// @ts-ignore
                                                                if (peg$silentFails === 0) { peg$fail(peg$e90); }
                                                              }
// @ts-ignore
                                                              if (s0 === peg$FAILED) {
// @ts-ignore
                                                                if (input.substr(peg$currPos, 4) === peg$c81) {
// @ts-ignore
                                                                  s0 = peg$c81;
// @ts-ignore
                                                                  peg$currPos += 4;
// @ts-ignore
                                                                } else {
// @ts-ignore
                                                                  s0 = peg$FAILED;
// @ts-ignore
                                                                  if (peg$silentFails === 0) { peg$fail(peg$e91); }
                                                                }
// @ts-ignore
                                                                if (s0 === peg$FAILED) {
// @ts-ignore
                                                                  if (input.substr(peg$currPos, 8) === peg$c82) {
// @ts-ignore
                                                                    s0 = peg$c82;
// @ts-ignore
                                                                    peg$currPos += 8;
// @ts-ignore
                                                                  } else {
// @ts-ignore
                                                                    s0 = peg$FAILED;
// @ts-ignore
                                                                    if (peg$silentFails === 0) { peg$fail(peg$e92); }
                                                                  }
// @ts-ignore
                                                                  if (s0 === peg$FAILED) {
// @ts-ignore
                                                                    if (input.substr(peg$currPos, 2) === peg$c83) {
// @ts-ignore
                                                                      s0 = peg$c83;
// @ts-ignore
                                                                      peg$currPos += 2;
// @ts-ignore
                                                                    } else {
// @ts-ignore
                                                                      s0 = peg$FAILED;
// @ts-ignore
                                                                      if (peg$silentFails === 0) { peg$fail(peg$e93); }
                                                                    }
// @ts-ignore
                                                                    if (s0 === peg$FAILED) {
// @ts-ignore
                                                                      if (input.substr(peg$currPos, 3) === peg$c84) {
// @ts-ignore
                                                                        s0 = peg$c84;
// @ts-ignore
                                                                        peg$currPos += 3;
// @ts-ignore
                                                                      } else {
// @ts-ignore
                                                                        s0 = peg$FAILED;
// @ts-ignore
                                                                        if (peg$silentFails === 0) { peg$fail(peg$e94); }
                                                                      }
// @ts-ignore
                                                                      if (s0 === peg$FAILED) {
// @ts-ignore
                                                                        if (input.substr(peg$currPos, 5) === peg$c85) {
// @ts-ignore
                                                                          s0 = peg$c85;
// @ts-ignore
                                                                          peg$currPos += 5;
// @ts-ignore
                                                                        } else {
// @ts-ignore
                                                                          s0 = peg$FAILED;
// @ts-ignore
                                                                          if (peg$silentFails === 0) { peg$fail(peg$e95); }
                                                                        }
// @ts-ignore
                                                                        if (s0 === peg$FAILED) {
// @ts-ignore
                                                                          if (input.substr(peg$currPos, 7) === peg$c86) {
// @ts-ignore
                                                                            s0 = peg$c86;
// @ts-ignore
                                                                            peg$currPos += 7;
// @ts-ignore
                                                                          } else {
// @ts-ignore
                                                                            s0 = peg$FAILED;
// @ts-ignore
                                                                            if (peg$silentFails === 0) { peg$fail(peg$e96); }
                                                                          }
// @ts-ignore
                                                                          if (s0 === peg$FAILED) {
// @ts-ignore
                                                                            if (input.substr(peg$currPos, 4) === peg$c87) {
// @ts-ignore
                                                                              s0 = peg$c87;
// @ts-ignore
                                                                              peg$currPos += 4;
// @ts-ignore
                                                                            } else {
// @ts-ignore
                                                                              s0 = peg$FAILED;
// @ts-ignore
                                                                              if (peg$silentFails === 0) { peg$fail(peg$e97); }
                                                                            }
// @ts-ignore
                                                                            if (s0 === peg$FAILED) {
// @ts-ignore
                                                                              if (input.substr(peg$currPos, 6) === peg$c88) {
// @ts-ignore
                                                                                s0 = peg$c88;
// @ts-ignore
                                                                                peg$currPos += 6;
// @ts-ignore
                                                                              } else {
// @ts-ignore
                                                                                s0 = peg$FAILED;
// @ts-ignore
                                                                                if (peg$silentFails === 0) { peg$fail(peg$e98); }
                                                                              }
// @ts-ignore
                                                                              if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                if (input.substr(peg$currPos, 6) === peg$c89) {
// @ts-ignore
                                                                                  s0 = peg$c89;
// @ts-ignore
                                                                                  peg$currPos += 6;
// @ts-ignore
                                                                                } else {
// @ts-ignore
                                                                                  s0 = peg$FAILED;
// @ts-ignore
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e99); }
                                                                                }
// @ts-ignore
                                                                                if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                  if (input.substr(peg$currPos, 6) === peg$c90) {
// @ts-ignore
                                                                                    s0 = peg$c90;
// @ts-ignore
                                                                                    peg$currPos += 6;
// @ts-ignore
                                                                                  } else {
// @ts-ignore
                                                                                    s0 = peg$FAILED;
// @ts-ignore
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e100); }
                                                                                  }
// @ts-ignore
                                                                                  if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                    if (input.substr(peg$currPos, 6) === peg$c91) {
// @ts-ignore
                                                                                      s0 = peg$c91;
// @ts-ignore
                                                                                      peg$currPos += 6;
// @ts-ignore
                                                                                    } else {
// @ts-ignore
                                                                                      s0 = peg$FAILED;
// @ts-ignore
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e101); }
                                                                                    }
// @ts-ignore
                                                                                    if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                      if (input.substr(peg$currPos, 6) === peg$c92) {
// @ts-ignore
                                                                                        s0 = peg$c92;
// @ts-ignore
                                                                                        peg$currPos += 6;
// @ts-ignore
                                                                                      } else {
// @ts-ignore
                                                                                        s0 = peg$FAILED;
// @ts-ignore
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e102); }
                                                                                      }
// @ts-ignore
                                                                                      if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                        if (input.substr(peg$currPos, 6) === peg$c93) {
// @ts-ignore
                                                                                          s0 = peg$c93;
// @ts-ignore
                                                                                          peg$currPos += 6;
// @ts-ignore
                                                                                        } else {
// @ts-ignore
                                                                                          s0 = peg$FAILED;
// @ts-ignore
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e103); }
                                                                                        }
// @ts-ignore
                                                                                        if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                          if (input.substr(peg$currPos, 6) === peg$c94) {
// @ts-ignore
                                                                                            s0 = peg$c94;
// @ts-ignore
                                                                                            peg$currPos += 6;
// @ts-ignore
                                                                                          } else {
// @ts-ignore
                                                                                            s0 = peg$FAILED;
// @ts-ignore
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e104); }
                                                                                          }
// @ts-ignore
                                                                                          if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                            if (input.substr(peg$currPos, 6) === peg$c95) {
// @ts-ignore
                                                                                              s0 = peg$c95;
// @ts-ignore
                                                                                              peg$currPos += 6;
// @ts-ignore
                                                                                            } else {
// @ts-ignore
                                                                                              s0 = peg$FAILED;
// @ts-ignore
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e105); }
                                                                                            }
// @ts-ignore
                                                                                            if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                              if (input.substr(peg$currPos, 6) === peg$c96) {
// @ts-ignore
                                                                                                s0 = peg$c96;
// @ts-ignore
                                                                                                peg$currPos += 6;
// @ts-ignore
                                                                                              } else {
// @ts-ignore
                                                                                                s0 = peg$FAILED;
// @ts-ignore
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e106); }
                                                                                              }
// @ts-ignore
                                                                                              if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                if (input.substr(peg$currPos, 6) === peg$c97) {
// @ts-ignore
                                                                                                  s0 = peg$c97;
// @ts-ignore
                                                                                                  peg$currPos += 6;
// @ts-ignore
                                                                                                } else {
// @ts-ignore
                                                                                                  s0 = peg$FAILED;
// @ts-ignore
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e107); }
                                                                                                }
// @ts-ignore
                                                                                                if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                  if (input.substr(peg$currPos, 6) === peg$c98) {
// @ts-ignore
                                                                                                    s0 = peg$c98;
// @ts-ignore
                                                                                                    peg$currPos += 6;
// @ts-ignore
                                                                                                  } else {
// @ts-ignore
                                                                                                    s0 = peg$FAILED;
// @ts-ignore
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e108); }
                                                                                                  }
// @ts-ignore
                                                                                                  if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                    if (input.substr(peg$currPos, 9) === peg$c99) {
// @ts-ignore
                                                                                                      s0 = peg$c99;
// @ts-ignore
                                                                                                      peg$currPos += 9;
// @ts-ignore
                                                                                                    } else {
// @ts-ignore
                                                                                                      s0 = peg$FAILED;
// @ts-ignore
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e109); }
                                                                                                    }
// @ts-ignore
                                                                                                    if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                      if (input.substr(peg$currPos, 9) === peg$c100) {
// @ts-ignore
                                                                                                        s0 = peg$c100;
// @ts-ignore
                                                                                                        peg$currPos += 9;
// @ts-ignore
                                                                                                      } else {
// @ts-ignore
                                                                                                        s0 = peg$FAILED;
// @ts-ignore
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e110); }
                                                                                                      }
// @ts-ignore
                                                                                                      if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                        if (input.substr(peg$currPos, 11) === peg$c101) {
// @ts-ignore
                                                                                                          s0 = peg$c101;
// @ts-ignore
                                                                                                          peg$currPos += 11;
// @ts-ignore
                                                                                                        } else {
// @ts-ignore
                                                                                                          s0 = peg$FAILED;
// @ts-ignore
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e111); }
                                                                                                        }
// @ts-ignore
                                                                                                        if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                          if (input.substr(peg$currPos, 15) === peg$c102) {
// @ts-ignore
                                                                                                            s0 = peg$c102;
// @ts-ignore
                                                                                                            peg$currPos += 15;
// @ts-ignore
                                                                                                          } else {
// @ts-ignore
                                                                                                            s0 = peg$FAILED;
// @ts-ignore
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e112); }
                                                                                                          }
// @ts-ignore
                                                                                                          if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                            if (input.substr(peg$currPos, 17) === peg$c103) {
// @ts-ignore
                                                                                                              s0 = peg$c103;
// @ts-ignore
                                                                                                              peg$currPos += 17;
// @ts-ignore
                                                                                                            } else {
// @ts-ignore
                                                                                                              s0 = peg$FAILED;
// @ts-ignore
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e113); }
                                                                                                            }
// @ts-ignore
                                                                                                            if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                              if (input.substr(peg$currPos, 14) === peg$c104) {
// @ts-ignore
                                                                                                                s0 = peg$c104;
// @ts-ignore
                                                                                                                peg$currPos += 14;
// @ts-ignore
                                                                                                              } else {
// @ts-ignore
                                                                                                                s0 = peg$FAILED;
// @ts-ignore
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e114); }
                                                                                                              }
// @ts-ignore
                                                                                                              if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                if (input.substr(peg$currPos, 20) === peg$c105) {
// @ts-ignore
                                                                                                                  s0 = peg$c105;
// @ts-ignore
                                                                                                                  peg$currPos += 20;
// @ts-ignore
                                                                                                                } else {
// @ts-ignore
                                                                                                                  s0 = peg$FAILED;
// @ts-ignore
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e115); }
                                                                                                                }
// @ts-ignore
                                                                                                                if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                  if (input.substr(peg$currPos, 10) === peg$c106) {
// @ts-ignore
                                                                                                                    s0 = peg$c106;
// @ts-ignore
                                                                                                                    peg$currPos += 10;
// @ts-ignore
                                                                                                                  } else {
// @ts-ignore
                                                                                                                    s0 = peg$FAILED;
// @ts-ignore
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e116); }
                                                                                                                  }
// @ts-ignore
                                                                                                                  if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                    if (input.substr(peg$currPos, 10) === peg$c107) {
// @ts-ignore
                                                                                                                      s0 = peg$c107;
// @ts-ignore
                                                                                                                      peg$currPos += 10;
// @ts-ignore
                                                                                                                    } else {
// @ts-ignore
                                                                                                                      s0 = peg$FAILED;
// @ts-ignore
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e117); }
                                                                                                                    }
// @ts-ignore
                                                                                                                    if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                      if (input.substr(peg$currPos, 12) === peg$c108) {
// @ts-ignore
                                                                                                                        s0 = peg$c108;
// @ts-ignore
                                                                                                                        peg$currPos += 12;
// @ts-ignore
                                                                                                                      } else {
// @ts-ignore
                                                                                                                        s0 = peg$FAILED;
// @ts-ignore
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e118); }
                                                                                                                      }
// @ts-ignore
                                                                                                                      if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                        if (input.substr(peg$currPos, 15) === peg$c109) {
// @ts-ignore
                                                                                                                          s0 = peg$c109;
// @ts-ignore
                                                                                                                          peg$currPos += 15;
// @ts-ignore
                                                                                                                        } else {
// @ts-ignore
                                                                                                                          s0 = peg$FAILED;
// @ts-ignore
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e119); }
                                                                                                                        }
// @ts-ignore
                                                                                                                        if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                          if (input.substr(peg$currPos, 10) === peg$c110) {
// @ts-ignore
                                                                                                                            s0 = peg$c110;
// @ts-ignore
                                                                                                                            peg$currPos += 10;
// @ts-ignore
                                                                                                                          } else {
// @ts-ignore
                                                                                                                            s0 = peg$FAILED;
// @ts-ignore
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e120); }
                                                                                                                          }
// @ts-ignore
                                                                                                                          if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                            if (input.substr(peg$currPos, 10) === peg$c111) {
// @ts-ignore
                                                                                                                              s0 = peg$c111;
// @ts-ignore
                                                                                                                              peg$currPos += 10;
// @ts-ignore
                                                                                                                            } else {
// @ts-ignore
                                                                                                                              s0 = peg$FAILED;
// @ts-ignore
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e121); }
                                                                                                                            }
// @ts-ignore
                                                                                                                            if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                              if (input.substr(peg$currPos, 12) === peg$c112) {
// @ts-ignore
                                                                                                                                s0 = peg$c112;
// @ts-ignore
                                                                                                                                peg$currPos += 12;
// @ts-ignore
                                                                                                                              } else {
// @ts-ignore
                                                                                                                                s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e122); }
                                                                                                                              }
// @ts-ignore
                                                                                                                              if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                if (input.substr(peg$currPos, 15) === peg$c113) {
// @ts-ignore
                                                                                                                                  s0 = peg$c113;
// @ts-ignore
                                                                                                                                  peg$currPos += 15;
// @ts-ignore
                                                                                                                                } else {
// @ts-ignore
                                                                                                                                  s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e123); }
                                                                                                                                }
// @ts-ignore
                                                                                                                                if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                  if (input.substr(peg$currPos, 6) === peg$c114) {
// @ts-ignore
                                                                                                                                    s0 = peg$c114;
// @ts-ignore
                                                                                                                                    peg$currPos += 6;
// @ts-ignore
                                                                                                                                  } else {
// @ts-ignore
                                                                                                                                    s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e124); }
                                                                                                                                  }
// @ts-ignore
                                                                                                                                  if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                    if (input.substr(peg$currPos, 4) === peg$c115) {
// @ts-ignore
                                                                                                                                      s0 = peg$c115;
// @ts-ignore
                                                                                                                                      peg$currPos += 4;
// @ts-ignore
                                                                                                                                    } else {
// @ts-ignore
                                                                                                                                      s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e125); }
                                                                                                                                    }
// @ts-ignore
                                                                                                                                    if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                      if (input.substr(peg$currPos, 5) === peg$c116) {
// @ts-ignore
                                                                                                                                        s0 = peg$c116;
// @ts-ignore
                                                                                                                                        peg$currPos += 5;
// @ts-ignore
                                                                                                                                      } else {
// @ts-ignore
                                                                                                                                        s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e126); }
                                                                                                                                      }
// @ts-ignore
                                                                                                                                      if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                        if (input.substr(peg$currPos, 9) === peg$c117) {
// @ts-ignore
                                                                                                                                          s0 = peg$c117;
// @ts-ignore
                                                                                                                                          peg$currPos += 9;
// @ts-ignore
                                                                                                                                        } else {
// @ts-ignore
                                                                                                                                          s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e127); }
                                                                                                                                        }
// @ts-ignore
                                                                                                                                        if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                          if (input.substr(peg$currPos, 5) === peg$c118) {
// @ts-ignore
                                                                                                                                            s0 = peg$c118;
// @ts-ignore
                                                                                                                                            peg$currPos += 5;
// @ts-ignore
                                                                                                                                          } else {
// @ts-ignore
                                                                                                                                            s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e128); }
                                                                                                                                          }
// @ts-ignore
                                                                                                                                          if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                            if (input.substr(peg$currPos, 7) === peg$c119) {
// @ts-ignore
                                                                                                                                              s0 = peg$c119;
// @ts-ignore
                                                                                                                                              peg$currPos += 7;
// @ts-ignore
                                                                                                                                            } else {
// @ts-ignore
                                                                                                                                              s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e129); }
                                                                                                                                            }
// @ts-ignore
                                                                                                                                            if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                              if (input.substr(peg$currPos, 4) === peg$c120) {
// @ts-ignore
                                                                                                                                                s0 = peg$c120;
// @ts-ignore
                                                                                                                                                peg$currPos += 4;
// @ts-ignore
                                                                                                                                              } else {
// @ts-ignore
                                                                                                                                                s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e130); }
                                                                                                                                              }
// @ts-ignore
                                                                                                                                              if (s0 === peg$FAILED) {
// @ts-ignore
                                                                                                                                                if (input.substr(peg$currPos, 9) === peg$c121) {
// @ts-ignore
                                                                                                                                                  s0 = peg$c121;
// @ts-ignore
                                                                                                                                                  peg$currPos += 9;
// @ts-ignore
                                                                                                                                                } else {
// @ts-ignore
                                                                                                                                                  s0 = peg$FAILED;
// @ts-ignore
                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e131); }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

// @ts-ignore
    return s0;
  }


  // Helper function to build BinaryExpression nodes
// @ts-ignore
  function buildBinaryExpression(operator, left, right) {
// @ts-ignore
    return {
// @ts-ignore
      type: "BinaryExpression",
// @ts-ignore
      operator: operator,
// @ts-ignore
      left: left,
// @ts-ignore
      right: right
    };
  }

  // Helper function to build LogicalExpression nodes
// @ts-ignore
  function buildLogicalExpression(operator, left, right) {
// @ts-ignore
    return {
// @ts-ignore
      type: "LogicalExpression",
// @ts-ignore
      operator: operator,
// @ts-ignore
      left: left,
// @ts-ignore
      right: right
    };
  }

  // Helper function for reducing sequences of expressions
// @ts-ignore
  function reduceExpressions(initial, rest, builder) {
// @ts-ignore
    return rest.reduce((acc, curr) => {
// @ts-ignore
      return builder(curr[1], acc, curr[3]);
// @ts-ignore
    }, initial);
  }

// @ts-ignore
  peg$result = peg$startRuleFunction();

// @ts-ignore
  if (peg$result !== peg$FAILED && peg$currPos === input.length) {
// @ts-ignore
    return peg$result;
// @ts-ignore
  } else {
// @ts-ignore
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
// @ts-ignore
      peg$fail(peg$endExpectation());
    }

// @ts-ignore
    throw peg$buildStructuredError(
// @ts-ignore
      peg$maxFailExpected,
// @ts-ignore
      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
// @ts-ignore
      peg$maxFailPos < input.length
// @ts-ignore
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
// @ts-ignore
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
    );
  }
}

// @ts-ignore
  return {
    SyntaxError: peg$SyntaxError,
    parse: peg$parse
  };
})()

export interface FilePosition {
  offset: number;
  line: number;
  column: number;
}

export interface FileRange {
  start: FilePosition;
  end: FilePosition;
  source: string;
}

export interface LiteralExpectation {
  type: "literal";
  text: string;
  ignoreCase: boolean;
}

export interface ClassParts extends Array<string | ClassParts> {}

export interface ClassExpectation {
  type: "class";
  parts: ClassParts;
  inverted: boolean;
  ignoreCase: boolean;
}

export interface AnyExpectation {
  type: "any";
}

export interface EndExpectation {
  type: "end";
}

export interface OtherExpectation {
  type: "other";
  description: string;
}

export type Expectation = LiteralExpectation | ClassExpectation | AnyExpectation | EndExpectation | OtherExpectation;

declare class _PeggySyntaxError extends Error {
  public static buildMessage(expected: Expectation[], found: string | null): string;
  public message: string;
  public expected: Expectation[];
  public found: string | null;
  public location: FileRange;
  public name: string;
  constructor(message: string, expected: Expectation[], found: string | null, location: FileRange);
  format(sources: {
    source?: any;
    text: string;
  }[]): string;
}

export interface TraceEvent {
    type: string;
    rule: string;
    result?: any;
    location: FileRange;
  }

declare class _DefaultTracer {
  private indentLevel: number;
  public trace(event: TraceEvent): void;
}

peggyParser.SyntaxError.prototype.name = "PeggySyntaxError";

export interface ParseOptions {
  filename?: string;
  startRule?: "start";
  tracer?: any;
  [key: string]: any;
}
export type ParseFunction = <Options extends ParseOptions>(
    input: string,
    options?: Options
  ) => Options extends { startRule: infer StartRule } ?
    StartRule extends "start" ? Start : Start
    : Start;
export const parse: ParseFunction = peggyParser.parse;

export const PeggySyntaxError = peggyParser.SyntaxError as typeof _PeggySyntaxError;

export type PeggySyntaxError = _PeggySyntaxError;

// These types were autogenerated by ts-pegjs
export type Start = { type: "Program"; body: [any] };
export type Expression = any;
export type AssignmentExpression =
  | ConditionalExpression
  | { type: "AssignmentExpression"; operator: any; left: any; right: any };
export type ConditionalExpression = any;
export type LogicalOrExpression = any;
export type LogicalXorExpression = any;
export type LogicalAndExpression = any;
export type InclusiveOrExpression = any;
export type ExclusiveOrExpression = any;
export type AndExpression = any;
export type EqualityExpression = any;
export type RelationalExpression = any;
export type ShiftExpression = any;
export type AdditiveExpression = any;
export type MultiplicativeExpression = any;
export type UnaryExpression =
  | { type: "UnaryExpression"; operator: any; argument: any; prefix: true }
  | PostfixExpression;
export type PostfixExpression = any;
export type PostfixPart =
  | { type: "MemberExpression"; property: any; computed: true }
  | {
      type: "MemberExpression";
      property: { type: "Identifier"; name: any };
      computed: false;
    }
  | { type: "CallExpression"; arguments: any }
  | { type: "UpdateExpression"; operator: any; prefix: false };
export type PrimaryExpression = VariableIdentifier | Constant | any;
export type VariableIdentifier = { type: "Identifier"; name: any };
export type Constant =
  | INTCONSTANT
  | UINTCONSTANT
  | FLOATCONSTANT
  | BOOLCONSTANT;
export type FunctionCallArguments = any;
export type ArgumentExpressionList = any[];
export type AssignmentOperator =
  | EQUAL
  | MULASSIGN
  | DIVASSIGN
  | MODASSIGN
  | ADDASSIGN
  | SUBASSIGN
  | LEFTASSIGN
  | RIGHTASSIGN
  | ANDASSIGN
  | XORASSIGN
  | ORASSIGN;
export type UnaryOperator = PLUS | DASH | BANG | TILDE;
export type IDENTIFIER = string;
export type INTCONSTANT = { type: "Literal"; value: number; raw: string };
export type UINTCONSTANT = { type: "Literal"; value: number; raw: string };
export type FLOATCONSTANT = { type: "Literal"; value: number; raw: string };
export type ExponentPart = [string, string | null, string[]];
export type BOOLCONSTANT =
  | { type: "Literal"; value: true; raw: string }
  | { type: "Literal"; value: false; raw: string };
export type LEFTOP = string;
export type RIGHTOP = string;
export type INCOP = string;
export type DECOP = string;
export type LEOP = string;
export type GEOP = string;
export type EQOP = string;
export type NEOP = string;
export type ANDOP = string;
export type OROP = string;
export type XOROP = string;
export type MULASSIGN = string;
export type DIVASSIGN = string;
export type ADDASSIGN = string;
export type MODASSIGN = string;
export type LEFTASSIGN = string;
export type RIGHTASSIGN = string;
export type ANDASSIGN = string;
export type XORASSIGN = string;
export type ORASSIGN = string;
export type SUBASSIGN = string;
export type EQUAL = string;
export type LEFTPAREN = "(";
export type RIGHTPAREN = ")";
export type LEFTBRACKET = "[";
export type RIGHTBRACKET = "]";
export type LEFTBRACE = "{";
export type RIGHTBRACE = "}";
export type DOT = ".";
export type COMMA = ",";
export type COLON = ":";
export type SEMICOLON = ";";
export type BANG = string;
export type DASH = string;
export type TILDE = string;
export type PLUS = string;
export type STAR = string;
export type SLASH = string;
export type PERCENT = string;
export type LEFTANGLE = string;
export type RIGHTANGLE = string;
export type VERTICALBAR = string;
export type CARET = string;
export type AMPERSAND = string;
export type QUESTION = string;
export type _ = (string | Comment)[];
export type Comment =
  | ["//", string[], "\n"]
  | ["/*", [undefined, string][], "*/"];
export type EOF = undefined;
export type Keyword =
  | "const"
  | "bool"
  | "float"
  | "int"
  | "uint"
  | "break"
  | "continue"
  | "do"
  | "else"
  | "for"
  | "if"
  | "discard"
  | "return"
  | "switch"
  | "case"
  | "default"
  | "bvec2"
  | "bvec3"
  | "bvec4"
  | "ivec2"
  | "ivec3"
  | "ivec4"
  | "uvec2"
  | "uvec3"
  | "uvec4"
  | "vec2"
  | "vec3"
  | "vec4"
  | "mat2"
  | "mat3"
  | "mat4"
  | "centroid"
  | "in"
  | "out"
  | "inout"
  | "uniform"
  | "flat"
  | "smooth"
  | "layout"
  | "mat2x2"
  | "mat2x3"
  | "mat2x4"
  | "mat3x2"
  | "mat3x3"
  | "mat3x4"
  | "mat4x2"
  | "mat4x3"
  | "mat4x4"
  | "sampler2D"
  | "sampler3D"
  | "samplerCube"
  | "sampler2DShadow"
  | "samplerCubeShadow"
  | "sampler2DArray"
  | "sampler2DArrayShadow"
  | "isampler2D"
  | "isampler3D"
  | "isamplerCube"
  | "isampler2DArray"
  | "usampler2D"
  | "usampler3D"
  | "usamplerCube"
  | "usampler2DArray"
  | "struct"
  | "void"
  | "while"
  | "invariant"
  | "highp"
  | "mediump"
  | "lowp"
  | "precision";
